/*
 * generated by Xtext 2.32.0
 */
/*
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
parser grammar InternalQueryParser;

options {
	tokenVocab=InternalQueryLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package com.epistimis.uddl.query.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.epistimis.uddl.query.services.QueryGrammarAccess;

}
@members {
	private QueryGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("From", "'from'");
		tokenNameToValue.put("Select", "'select'");
	}

	public void setGrammarAccess(QueryGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleQuerySpecification
entryRuleQuerySpecification
:
{ before(grammarAccess.getQuerySpecificationRule()); }
	 ruleQuerySpecification
{ after(grammarAccess.getQuerySpecificationRule()); } 
	 EOF 
;

// Rule QuerySpecification
ruleQuerySpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuerySpecificationAccess().getQueryStatementParserRuleCall()); }
		ruleQueryStatement
		{ after(grammarAccess.getQuerySpecificationAccess().getQueryStatementParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQueryStatement
entryRuleQueryStatement
:
{ before(grammarAccess.getQueryStatementRule()); }
	 ruleQueryStatement
{ after(grammarAccess.getQueryStatementRule()); } 
	 EOF 
;

// Rule QueryStatement
ruleQueryStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryStatementAccess().getGroup()); }
		(rule__QueryStatement__Group__0)
		{ after(grammarAccess.getQueryStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetQualifier
entryRuleSetQualifier
:
{ before(grammarAccess.getSetQualifierRule()); }
	 ruleSetQualifier
{ after(grammarAccess.getSetQualifierRule()); } 
	 EOF 
;

// Rule SetQualifier
ruleSetQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetQualifierAccess().getAlternatives()); }
		(rule__SetQualifier__Alternatives)
		{ after(grammarAccess.getSetQualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjectedCharacteristicList
entryRuleProjectedCharacteristicList
:
{ before(grammarAccess.getProjectedCharacteristicListRule()); }
	 ruleProjectedCharacteristicList
{ after(grammarAccess.getProjectedCharacteristicListRule()); } 
	 EOF 
;

// Rule ProjectedCharacteristicList
ruleProjectedCharacteristicList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectedCharacteristicListAccess().getAlternatives()); }
		(rule__ProjectedCharacteristicList__Alternatives)
		{ after(grammarAccess.getProjectedCharacteristicListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjectedCharacteristicExpression
entryRuleProjectedCharacteristicExpression
:
{ before(grammarAccess.getProjectedCharacteristicExpressionRule()); }
	 ruleProjectedCharacteristicExpression
{ after(grammarAccess.getProjectedCharacteristicExpressionRule()); } 
	 EOF 
;

// Rule ProjectedCharacteristicExpression
ruleProjectedCharacteristicExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectedCharacteristicExpressionAccess().getAlternatives()); }
		(rule__ProjectedCharacteristicExpression__Alternatives)
		{ after(grammarAccess.getProjectedCharacteristicExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectedEntityCharacteristicWildcardReference
entryRuleSelectedEntityCharacteristicWildcardReference
:
{ before(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceRule()); }
	 ruleSelectedEntityCharacteristicWildcardReference
{ after(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceRule()); } 
	 EOF 
;

// Rule SelectedEntityCharacteristicWildcardReference
ruleSelectedEntityCharacteristicWildcardReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getGroup()); }
		(rule__SelectedEntityCharacteristicWildcardReference__Group__0)
		{ after(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExplicitSelectedEntityCharacteristicReference
entryRuleExplicitSelectedEntityCharacteristicReference
:
{ before(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceRule()); }
	 ruleExplicitSelectedEntityCharacteristicReference
{ after(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceRule()); } 
	 EOF 
;

// Rule ExplicitSelectedEntityCharacteristicReference
ruleExplicitSelectedEntityCharacteristicReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getGroup()); }
		(rule__ExplicitSelectedEntityCharacteristicReference__Group__0)
		{ after(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectedEntityExpression
entryRuleSelectedEntityExpression
:
{ before(grammarAccess.getSelectedEntityExpressionRule()); }
	 ruleSelectedEntityExpression
{ after(grammarAccess.getSelectedEntityExpressionRule()); } 
	 EOF 
;

// Rule SelectedEntityExpression
ruleSelectedEntityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectedEntityExpressionAccess().getGroup()); }
		(rule__SelectedEntityExpression__Group__0)
		{ after(grammarAccess.getSelectedEntityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFromClause
entryRuleFromClause
:
{ before(grammarAccess.getFromClauseRule()); }
	 ruleFromClause
{ after(grammarAccess.getFromClauseRule()); } 
	 EOF 
;

// Rule FromClause
ruleFromClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFromClauseAccess().getGroup()); }
		(rule__FromClause__Group__0)
		{ after(grammarAccess.getFromClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityExpression
entryRuleEntityExpression
:
{ before(grammarAccess.getEntityExpressionRule()); }
	 ruleEntityExpression
{ after(grammarAccess.getEntityExpressionRule()); } 
	 EOF 
;

// Rule EntityExpression
ruleEntityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityExpressionAccess().getGroup()); }
		(rule__EntityExpression__Group__0)
		{ after(grammarAccess.getEntityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectedEntity
entryRuleSelectedEntity
:
{ before(grammarAccess.getSelectedEntityRule()); }
	 ruleSelectedEntity
{ after(grammarAccess.getSelectedEntityRule()); } 
	 EOF 
;

// Rule SelectedEntity
ruleSelectedEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectedEntityAccess().getGroup()); }
		(rule__SelectedEntity__Group__0)
		{ after(grammarAccess.getSelectedEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityJoinExpression
entryRuleEntityJoinExpression
:
{ before(grammarAccess.getEntityJoinExpressionRule()); }
	 ruleEntityJoinExpression
{ after(grammarAccess.getEntityJoinExpressionRule()); } 
	 EOF 
;

// Rule EntityJoinExpression
ruleEntityJoinExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityJoinExpressionAccess().getGroup()); }
		(rule__EntityJoinExpression__Group__0)
		{ after(grammarAccess.getEntityJoinExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoinEntity
entryRuleJoinEntity
:
{ before(grammarAccess.getJoinEntityRule()); }
	 ruleJoinEntity
{ after(grammarAccess.getJoinEntityRule()); } 
	 EOF 
;

// Rule JoinEntity
ruleJoinEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinEntityAccess().getSelectedEntityParserRuleCall()); }
		ruleSelectedEntity
		{ after(grammarAccess.getJoinEntityAccess().getSelectedEntityParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityJoinCriteria
entryRuleEntityJoinCriteria
:
{ before(grammarAccess.getEntityJoinCriteriaRule()); }
	 ruleEntityJoinCriteria
{ after(grammarAccess.getEntityJoinCriteriaRule()); } 
	 EOF 
;

// Rule EntityJoinCriteria
ruleEntityJoinCriteria 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityJoinCriteriaAccess().getGroup()); }
		(rule__EntityJoinCriteria__Group__0)
		{ after(grammarAccess.getEntityJoinCriteriaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityTypeCharacteristicEquivalenceExpression
entryRuleEntityTypeCharacteristicEquivalenceExpression
:
{ before(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionRule()); }
	 ruleEntityTypeCharacteristicEquivalenceExpression
{ after(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionRule()); } 
	 EOF 
;

// Rule EntityTypeCharacteristicEquivalenceExpression
ruleEntityTypeCharacteristicEquivalenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getGroup()); }
		(rule__EntityTypeCharacteristicEquivalenceExpression__Group__0)
		{ after(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectedEntityCharacteristicReference
entryRuleSelectedEntityCharacteristicReference
:
{ before(grammarAccess.getSelectedEntityCharacteristicReferenceRule()); }
	 ruleSelectedEntityCharacteristicReference
{ after(grammarAccess.getSelectedEntityCharacteristicReferenceRule()); } 
	 EOF 
;

// Rule SelectedEntityCharacteristicReference
ruleSelectedEntityCharacteristicReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getGroup()); }
		(rule__SelectedEntityCharacteristicReference__Group__0)
		{ after(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectedEntityReference
entryRuleSelectedEntityReference
:
{ before(grammarAccess.getSelectedEntityReferenceRule()); }
	 ruleSelectedEntityReference
{ after(grammarAccess.getSelectedEntityReferenceRule()); } 
	 EOF 
;

// Rule SelectedEntityReference
ruleSelectedEntityReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectedEntityReferenceAccess().getQueryIdentifierParserRuleCall()); }
		ruleQueryIdentifier
		{ after(grammarAccess.getSelectedEntityReferenceAccess().getQueryIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhereClause
entryRuleWhereClause
:
{ before(grammarAccess.getWhereClauseRule()); }
	 ruleWhereClause
{ after(grammarAccess.getWhereClauseRule()); } 
	 EOF 
;

// Rule WhereClause
ruleWhereClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhereClauseAccess().getGroup()); }
		(rule__WhereClause__Group__0)
		{ after(grammarAccess.getWhereClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCriteria
entryRuleCriteria
:
{ before(grammarAccess.getCriteriaRule()); }
	 ruleCriteria
{ after(grammarAccess.getCriteriaRule()); } 
	 EOF 
;

// Rule Criteria
ruleCriteria 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCriteriaAccess().getBooleanExpressionParserRuleCall()); }
		ruleBooleanExpression
		{ after(grammarAccess.getCriteriaAccess().getBooleanExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderByClause
entryRuleOrderByClause
:
{ before(grammarAccess.getOrderByClauseRule()); }
	 ruleOrderByClause
{ after(grammarAccess.getOrderByClauseRule()); } 
	 EOF 
;

// Rule OrderByClause
ruleOrderByClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderByClauseAccess().getGroup()); }
		(rule__OrderByClause__Group__0)
		{ after(grammarAccess.getOrderByClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderingExpression
entryRuleOrderingExpression
:
{ before(grammarAccess.getOrderingExpressionRule()); }
	 ruleOrderingExpression
{ after(grammarAccess.getOrderingExpressionRule()); } 
	 EOF 
;

// Rule OrderingExpression
ruleOrderingExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderingExpressionAccess().getGroup()); }
		(rule__OrderingExpression__Group__0)
		{ after(grammarAccess.getOrderingExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjectedCharacteristicReference
entryRuleProjectedCharacteristicReference
:
{ before(grammarAccess.getProjectedCharacteristicReferenceRule()); }
	 ruleProjectedCharacteristicReference
{ after(grammarAccess.getProjectedCharacteristicReferenceRule()); } 
	 EOF 
;

// Rule ProjectedCharacteristicReference
ruleProjectedCharacteristicReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectedCharacteristicReferenceAccess().getAlternatives()); }
		(rule__ProjectedCharacteristicReference__Alternatives)
		{ after(grammarAccess.getProjectedCharacteristicReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedProjectedCharacteristicReference
entryRuleQualifiedProjectedCharacteristicReference
:
{ before(grammarAccess.getQualifiedProjectedCharacteristicReferenceRule()); }
	 ruleQualifiedProjectedCharacteristicReference
{ after(grammarAccess.getQualifiedProjectedCharacteristicReferenceRule()); } 
	 EOF 
;

// Rule QualifiedProjectedCharacteristicReference
ruleQualifiedProjectedCharacteristicReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getGroup()); }
		(rule__QualifiedProjectedCharacteristicReference__Group__0)
		{ after(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnqualifiedProjectedCharacteristicReferenceOrAlias
entryRuleUnqualifiedProjectedCharacteristicReferenceOrAlias
:
{ before(grammarAccess.getUnqualifiedProjectedCharacteristicReferenceOrAliasRule()); }
	 ruleUnqualifiedProjectedCharacteristicReferenceOrAlias
{ after(grammarAccess.getUnqualifiedProjectedCharacteristicReferenceOrAliasRule()); } 
	 EOF 
;

// Rule UnqualifiedProjectedCharacteristicReferenceOrAlias
ruleUnqualifiedProjectedCharacteristicReferenceOrAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnqualifiedProjectedCharacteristicReferenceOrAliasAccess().getQueryIdentifierParserRuleCall()); }
		ruleQueryIdentifier
		{ after(grammarAccess.getUnqualifiedProjectedCharacteristicReferenceOrAliasAccess().getQueryIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrderingType
entryRuleOrderingType
:
{ before(grammarAccess.getOrderingTypeRule()); }
	 ruleOrderingType
{ after(grammarAccess.getOrderingTypeRule()); } 
	 EOF 
;

// Rule OrderingType
ruleOrderingType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderingTypeAccess().getAlternatives()); }
		(rule__OrderingType__Alternatives)
		{ after(grammarAccess.getOrderingTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getGroup()); }
		(rule__BooleanExpression__Group__0)
		{ after(grammarAccess.getBooleanExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanTerm
entryRuleBooleanTerm
:
{ before(grammarAccess.getBooleanTermRule()); }
	 ruleBooleanTerm
{ after(grammarAccess.getBooleanTermRule()); } 
	 EOF 
;

// Rule BooleanTerm
ruleBooleanTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanTermAccess().getGroup()); }
		(rule__BooleanTerm__Group__0)
		{ after(grammarAccess.getBooleanTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanFactor
entryRuleBooleanFactor
:
{ before(grammarAccess.getBooleanFactorRule()); }
	 ruleBooleanFactor
{ after(grammarAccess.getBooleanFactorRule()); } 
	 EOF 
;

// Rule BooleanFactor
ruleBooleanFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanFactorAccess().getGroup()); }
		(rule__BooleanFactor__Group__0)
		{ after(grammarAccess.getBooleanFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanPredicate
entryRuleBooleanPredicate
:
{ before(grammarAccess.getBooleanPredicateRule()); }
	 ruleBooleanPredicate
{ after(grammarAccess.getBooleanPredicateRule()); } 
	 EOF 
;

// Rule BooleanPredicate
ruleBooleanPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanPredicateAccess().getAlternatives()); }
		(rule__BooleanPredicate__Alternatives)
		{ after(grammarAccess.getBooleanPredicateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScalarComparePredicate
entryRuleScalarComparePredicate
:
{ before(grammarAccess.getScalarComparePredicateRule()); }
	 ruleScalarComparePredicate
{ after(grammarAccess.getScalarComparePredicateRule()); } 
	 EOF 
;

// Rule ScalarComparePredicate
ruleScalarComparePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarComparePredicateAccess().getGroup()); }
		(rule__ScalarComparePredicate__Group__0)
		{ after(grammarAccess.getScalarComparePredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalSet
entryRuleLogicalSet
:
{ before(grammarAccess.getLogicalSetRule()); }
	 ruleLogicalSet
{ after(grammarAccess.getLogicalSetRule()); } 
	 EOF 
;

// Rule LogicalSet
ruleLogicalSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalSetAccess().getAlternatives()); }
		(rule__LogicalSet__Alternatives)
		{ after(grammarAccess.getLogicalSetAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicBasisSet
entryRuleCharacteristicBasisSet
:
{ before(grammarAccess.getCharacteristicBasisSetRule()); }
	 ruleCharacteristicBasisSet
{ after(grammarAccess.getCharacteristicBasisSetRule()); } 
	 EOF 
;

// Rule CharacteristicBasisSet
ruleCharacteristicBasisSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicBasisSetAccess().getGroup()); }
		(rule__CharacteristicBasisSet__Group__0)
		{ after(grammarAccess.getCharacteristicBasisSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompareSet
entryRuleCompareSet
:
{ before(grammarAccess.getCompareSetRule()); }
	 ruleCompareSet
{ after(grammarAccess.getCompareSetRule()); } 
	 EOF 
;

// Rule CompareSet
ruleCompareSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareSetAccess().getSubqueryParserRuleCall()); }
		ruleSubquery
		{ after(grammarAccess.getCompareSetAccess().getSubqueryParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompareOperator
entryRuleCompareOperator
:
{ before(grammarAccess.getCompareOperatorRule()); }
	 ruleCompareOperator
{ after(grammarAccess.getCompareOperatorRule()); } 
	 EOF 
;

// Rule CompareOperator
ruleCompareOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
		(rule__CompareOperator__Alternatives)
		{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetCompareQuantifier
entryRuleSetCompareQuantifier
:
{ before(grammarAccess.getSetCompareQuantifierRule()); }
	 ruleSetCompareQuantifier
{ after(grammarAccess.getSetCompareQuantifierRule()); } 
	 EOF 
;

// Rule SetCompareQuantifier
ruleSetCompareQuantifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetCompareQuantifierAccess().getAlternatives()); }
		(rule__SetCompareQuantifier__Alternatives)
		{ after(grammarAccess.getSetCompareQuantifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistsPredicate
entryRuleExistsPredicate
:
{ before(grammarAccess.getExistsPredicateRule()); }
	 ruleExistsPredicate
{ after(grammarAccess.getExistsPredicateRule()); } 
	 EOF 
;

// Rule ExistsPredicate
ruleExistsPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistsPredicateAccess().getGroup()); }
		(rule__ExistsPredicate__Group__0)
		{ after(grammarAccess.getExistsPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicateTerm
entryRulePredicateTerm
:
{ before(grammarAccess.getPredicateTermRule()); }
	 rulePredicateTerm
{ after(grammarAccess.getPredicateTermRule()); } 
	 EOF 
;

// Rule PredicateTerm
rulePredicateTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateTermAccess().getAlternatives()); }
		(rule__PredicateTerm__Alternatives)
		{ after(grammarAccess.getPredicateTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicBasis
entryRuleCharacteristicBasis
:
{ before(grammarAccess.getCharacteristicBasisRule()); }
	 ruleCharacteristicBasis
{ after(grammarAccess.getCharacteristicBasisRule()); } 
	 EOF 
;

// Rule CharacteristicBasis
ruleCharacteristicBasis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicBasisAccess().getAlternatives()); }
		(rule__CharacteristicBasis__Alternatives)
		{ after(grammarAccess.getCharacteristicBasisAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubquery
entryRuleSubquery
:
{ before(grammarAccess.getSubqueryRule()); }
	 ruleSubquery
{ after(grammarAccess.getSubqueryRule()); } 
	 EOF 
;

// Rule Subquery
ruleSubquery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubqueryAccess().getGroup()); }
		(rule__Subquery__Group__0)
		{ after(grammarAccess.getSubqueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicReference
entryRuleCharacteristicReference
:
{ before(grammarAccess.getCharacteristicReferenceRule()); }
	 ruleCharacteristicReference
{ after(grammarAccess.getCharacteristicReferenceRule()); } 
	 EOF 
;

// Rule CharacteristicReference
ruleCharacteristicReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicReferenceAccess().getQueryIdentifierParserRuleCall()); }
		ruleQueryIdentifier
		{ after(grammarAccess.getCharacteristicReferenceAccess().getQueryIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityTypeReference
entryRuleEntityTypeReference
:
{ before(grammarAccess.getEntityTypeReferenceRule()); }
	 ruleEntityTypeReference
{ after(grammarAccess.getEntityTypeReferenceRule()); } 
	 EOF 
;

// Rule EntityTypeReference
ruleEntityTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityTypeReferenceAccess().getQueryIdentifierParserRuleCall()); }
		ruleQueryIdentifier
		{ after(grammarAccess.getEntityTypeReferenceAccess().getQueryIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumLiteralSet
entryRuleEnumLiteralSet
:
{ before(grammarAccess.getEnumLiteralSetRule()); }
	 ruleEnumLiteralSet
{ after(grammarAccess.getEnumLiteralSetRule()); } 
	 EOF 
;

// Rule EnumLiteralSet
ruleEnumLiteralSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumLiteralSetAccess().getGroup()); }
		(rule__EnumLiteralSet__Group__0)
		{ after(grammarAccess.getEnumLiteralSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumLiteralReferenceExpression
entryRuleEnumLiteralReferenceExpression
:
{ before(grammarAccess.getEnumLiteralReferenceExpressionRule()); }
	 ruleEnumLiteralReferenceExpression
{ after(grammarAccess.getEnumLiteralReferenceExpressionRule()); } 
	 EOF 
;

// Rule EnumLiteralReferenceExpression
ruleEnumLiteralReferenceExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumLiteralReferenceExpressionAccess().getGroup()); }
		(rule__EnumLiteralReferenceExpression__Group__0)
		{ after(grammarAccess.getEnumLiteralReferenceExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationTypeReference
entryRuleEnumerationTypeReference
:
{ before(grammarAccess.getEnumerationTypeReferenceRule()); }
	 ruleEnumerationTypeReference
{ after(grammarAccess.getEnumerationTypeReferenceRule()); } 
	 EOF 
;

// Rule EnumerationTypeReference
ruleEnumerationTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationTypeReferenceAccess().getQueryIdentifierParserRuleCall()); }
		ruleQueryIdentifier
		{ after(grammarAccess.getEnumerationTypeReferenceAccess().getQueryIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationLiteralReference
entryRuleEnumerationLiteralReference
:
{ before(grammarAccess.getEnumerationLiteralReferenceRule()); }
	 ruleEnumerationLiteralReference
{ after(grammarAccess.getEnumerationLiteralReferenceRule()); } 
	 EOF 
;

// Rule EnumerationLiteralReference
ruleEnumerationLiteralReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationLiteralReferenceAccess().getQueryIdentifierParserRuleCall()); }
		ruleQueryIdentifier
		{ after(grammarAccess.getEnumerationLiteralReferenceAccess().getQueryIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectedEntityAlias
entryRuleSelectedEntityAlias
:
{ before(grammarAccess.getSelectedEntityAliasRule()); }
	 ruleSelectedEntityAlias
{ after(grammarAccess.getSelectedEntityAliasRule()); } 
	 EOF 
;

// Rule SelectedEntityAlias
ruleSelectedEntityAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectedEntityAliasAccess().getQueryIdentifierParserRuleCall()); }
		ruleQueryIdentifier
		{ after(grammarAccess.getSelectedEntityAliasAccess().getQueryIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjectedCharacteristicAlias
entryRuleProjectedCharacteristicAlias
:
{ before(grammarAccess.getProjectedCharacteristicAliasRule()); }
	 ruleProjectedCharacteristicAlias
{ after(grammarAccess.getProjectedCharacteristicAliasRule()); } 
	 EOF 
;

// Rule ProjectedCharacteristicAlias
ruleProjectedCharacteristicAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectedCharacteristicAliasAccess().getQueryIdentifierParserRuleCall()); }
		ruleQueryIdentifier
		{ after(grammarAccess.getProjectedCharacteristicAliasAccess().getQueryIdentifierParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQueryIdentifier
entryRuleQueryIdentifier
:
{ before(grammarAccess.getQueryIdentifierRule()); }
	 ruleQueryIdentifier
{ after(grammarAccess.getQueryIdentifierRule()); } 
	 EOF 
;

// Rule QueryIdentifier
ruleQueryIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryIdentifierAccess().getIdAssignment()); }
		(rule__QueryIdentifier__IdAssignment)
		{ after(grammarAccess.getQueryIdentifierAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetQualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetQualifierAccess().getKW_DISTINCTTerminalRuleCall_0()); }
		RULE_KW_DISTINCT
		{ after(grammarAccess.getSetQualifierAccess().getKW_DISTINCTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetQualifierAccess().getKW_ALLTerminalRuleCall_1()); }
		RULE_KW_ALL
		{ after(grammarAccess.getSetQualifierAccess().getKW_ALLTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectedCharacteristicListAccess().getAllAssignment_0()); }
		(rule__ProjectedCharacteristicList__AllAssignment_0)
		{ after(grammarAccess.getProjectedCharacteristicListAccess().getAllAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getProjectedCharacteristicListAccess().getGroup_1()); }
		(rule__ProjectedCharacteristicList__Group_1__0)
		{ after(grammarAccess.getProjectedCharacteristicListAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectedCharacteristicExpressionAccess().getSelectedEntityCharacteristicWildcardReferenceParserRuleCall_0()); }
		ruleSelectedEntityCharacteristicWildcardReference
		{ after(grammarAccess.getProjectedCharacteristicExpressionAccess().getSelectedEntityCharacteristicWildcardReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProjectedCharacteristicExpressionAccess().getExplicitSelectedEntityCharacteristicReferenceParserRuleCall_1()); }
		ruleExplicitSelectedEntityCharacteristicReference
		{ after(grammarAccess.getProjectedCharacteristicExpressionAccess().getExplicitSelectedEntityCharacteristicReferenceParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectedCharacteristicReferenceAccess().getQualifiedProjectedCharacteristicReferenceParserRuleCall_0()); }
		ruleQualifiedProjectedCharacteristicReference
		{ after(grammarAccess.getProjectedCharacteristicReferenceAccess().getQualifiedProjectedCharacteristicReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProjectedCharacteristicReferenceAccess().getUnqualifiedProjectedCharacteristicReferenceOrAliasParserRuleCall_1()); }
		ruleUnqualifiedProjectedCharacteristicReferenceOrAlias
		{ after(grammarAccess.getProjectedCharacteristicReferenceAccess().getUnqualifiedProjectedCharacteristicReferenceOrAliasParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderingTypeAccess().getKW_ASCTerminalRuleCall_0()); }
		RULE_KW_ASC
		{ after(grammarAccess.getOrderingTypeAccess().getKW_ASCTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderingTypeAccess().getKW_DESCTerminalRuleCall_1()); }
		RULE_KW_DESC
		{ after(grammarAccess.getOrderingTypeAccess().getKW_DESCTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPredicate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanPredicateAccess().getScalarComparePredicateParserRuleCall_0()); }
		ruleScalarComparePredicate
		{ after(grammarAccess.getBooleanPredicateAccess().getScalarComparePredicateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanPredicateAccess().getExistsPredicateParserRuleCall_1()); }
		ruleExistsPredicate
		{ after(grammarAccess.getBooleanPredicateAccess().getExistsPredicateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanPredicateAccess().getGroup_2()); }
		(rule__BooleanPredicate__Group_2__0)
		{ after(grammarAccess.getBooleanPredicateAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSet__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalSetAccess().getSubqueryParserRuleCall_0()); }
		ruleSubquery
		{ after(grammarAccess.getLogicalSetAccess().getSubqueryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalSetAccess().getCharacteristicBasisSetParserRuleCall_1()); }
		ruleCharacteristicBasisSet
		{ after(grammarAccess.getLogicalSetAccess().getCharacteristicBasisSetParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalSetAccess().getEnumLiteralSetParserRuleCall_2()); }
		ruleEnumLiteralSet
		{ after(grammarAccess.getLogicalSetAccess().getEnumLiteralSetParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareOperatorAccess().getEQUALS_OPERATORTerminalRuleCall_0()); }
		RULE_EQUALS_OPERATOR
		{ after(grammarAccess.getCompareOperatorAccess().getEQUALS_OPERATORTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getNOT_EQUALS_OPERATORTerminalRuleCall_1()); }
		RULE_NOT_EQUALS_OPERATOR
		{ after(grammarAccess.getCompareOperatorAccess().getNOT_EQUALS_OPERATORTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getLESS_THAN_OPERATORTerminalRuleCall_2()); }
		RULE_LESS_THAN_OPERATOR
		{ after(grammarAccess.getCompareOperatorAccess().getLESS_THAN_OPERATORTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getGREATER_THAN_OPERATORTerminalRuleCall_3()); }
		RULE_GREATER_THAN_OPERATOR
		{ after(grammarAccess.getCompareOperatorAccess().getGREATER_THAN_OPERATORTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getLESS_THAN_OR_EQUALS_OPERATORTerminalRuleCall_4()); }
		RULE_LESS_THAN_OR_EQUALS_OPERATOR
		{ after(grammarAccess.getCompareOperatorAccess().getLESS_THAN_OR_EQUALS_OPERATORTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperatorAccess().getGREATER_THAN_OR_EQUALS_OPERATORTerminalRuleCall_5()); }
		RULE_GREATER_THAN_OR_EQUALS_OPERATOR
		{ after(grammarAccess.getCompareOperatorAccess().getGREATER_THAN_OR_EQUALS_OPERATORTerminalRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCompareQuantifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCompareQuantifierAccess().getKW_ALLTerminalRuleCall_0()); }
		RULE_KW_ALL
		{ after(grammarAccess.getSetCompareQuantifierAccess().getKW_ALLTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetCompareQuantifierAccess().getKW_SOMETerminalRuleCall_1()); }
		RULE_KW_SOME
		{ after(grammarAccess.getSetCompareQuantifierAccess().getKW_SOMETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateTermAccess().getCharacteristicBasisParserRuleCall_0()); }
		ruleCharacteristicBasis
		{ after(grammarAccess.getPredicateTermAccess().getCharacteristicBasisParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateTermAccess().getEnumLiteralReferenceExpressionParserRuleCall_1()); }
		ruleEnumLiteralReferenceExpression
		{ after(grammarAccess.getPredicateTermAccess().getEnumLiteralReferenceExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasis__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicBasisAccess().getSelectedEntityCharacteristicReferenceParserRuleCall_0()); }
		ruleSelectedEntityCharacteristicReference
		{ after(grammarAccess.getCharacteristicBasisAccess().getSelectedEntityCharacteristicReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicBasisAccess().getSubqueryParserRuleCall_1()); }
		ruleSubquery
		{ after(grammarAccess.getCharacteristicBasisAccess().getSubqueryParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryStatement__Group__0__Impl
	rule__QueryStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryStatementAccess().getSelectKeyword_0()); }
	Select
	{ after(grammarAccess.getQueryStatementAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryStatement__Group__1__Impl
	rule__QueryStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryStatementAccess().getQualifierAssignment_1()); }
	(rule__QueryStatement__QualifierAssignment_1)?
	{ after(grammarAccess.getQueryStatementAccess().getQualifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryStatement__Group__2__Impl
	rule__QueryStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryStatementAccess().getProjectedCharacteristicListAssignment_2()); }
	(rule__QueryStatement__ProjectedCharacteristicListAssignment_2)
	{ after(grammarAccess.getQueryStatementAccess().getProjectedCharacteristicListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryStatement__Group__3__Impl
	rule__QueryStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryStatementAccess().getSelectedEntityExpressionAssignment_3()); }
	(rule__QueryStatement__SelectedEntityExpressionAssignment_3)
	{ after(grammarAccess.getQueryStatementAccess().getSelectedEntityExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryStatementAccess().getSemicolonKeyword_4()); }
	(Semicolon)?
	{ after(grammarAccess.getQueryStatementAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectedCharacteristicList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectedCharacteristicList__Group_1__0__Impl
	rule__ProjectedCharacteristicList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectedCharacteristicListAccess().getCharacteristicAssignment_1_0()); }
	(rule__ProjectedCharacteristicList__CharacteristicAssignment_1_0)
	{ after(grammarAccess.getProjectedCharacteristicListAccess().getCharacteristicAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectedCharacteristicList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectedCharacteristicListAccess().getGroup_1_1()); }
	(rule__ProjectedCharacteristicList__Group_1_1__0)*
	{ after(grammarAccess.getProjectedCharacteristicListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectedCharacteristicList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectedCharacteristicList__Group_1_1__0__Impl
	rule__ProjectedCharacteristicList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectedCharacteristicListAccess().getCOMMATerminalRuleCall_1_1_0()); }
	RULE_COMMA
	{ after(grammarAccess.getProjectedCharacteristicListAccess().getCOMMATerminalRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectedCharacteristicList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectedCharacteristicListAccess().getCharacteristicAssignment_1_1_1()); }
	(rule__ProjectedCharacteristicList__CharacteristicAssignment_1_1_1)
	{ after(grammarAccess.getProjectedCharacteristicListAccess().getCharacteristicAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectedEntityCharacteristicWildcardReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityCharacteristicWildcardReference__Group__0__Impl
	rule__SelectedEntityCharacteristicWildcardReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicWildcardReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getSelectedEntityAssignment_0()); }
	(rule__SelectedEntityCharacteristicWildcardReference__SelectedEntityAssignment_0)
	{ after(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getSelectedEntityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicWildcardReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityCharacteristicWildcardReference__Group__1__Impl
	rule__SelectedEntityCharacteristicWildcardReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicWildcardReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getPERIODTerminalRuleCall_1()); }
	RULE_PERIOD
	{ after(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getPERIODTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicWildcardReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityCharacteristicWildcardReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicWildcardReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getALL_CHARACTERISTICSTerminalRuleCall_2()); }
	RULE_ALL_CHARACTERISTICS
	{ after(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getALL_CHARACTERISTICSTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitSelectedEntityCharacteristicReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitSelectedEntityCharacteristicReference__Group__0__Impl
	rule__ExplicitSelectedEntityCharacteristicReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitSelectedEntityCharacteristicReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getSelectedEntityCharacteristicReferenceAssignment_0()); }
	(rule__ExplicitSelectedEntityCharacteristicReference__SelectedEntityCharacteristicReferenceAssignment_0)
	{ after(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getSelectedEntityCharacteristicReferenceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitSelectedEntityCharacteristicReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitSelectedEntityCharacteristicReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitSelectedEntityCharacteristicReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getGroup_1()); }
	(rule__ExplicitSelectedEntityCharacteristicReference__Group_1__0)?
	{ after(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitSelectedEntityCharacteristicReference__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitSelectedEntityCharacteristicReference__Group_1__0__Impl
	rule__ExplicitSelectedEntityCharacteristicReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitSelectedEntityCharacteristicReference__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getKW_ASTerminalRuleCall_1_0()); }
	(RULE_KW_AS)?
	{ after(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getKW_ASTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitSelectedEntityCharacteristicReference__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitSelectedEntityCharacteristicReference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitSelectedEntityCharacteristicReference__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getProjectedCharacteristicAliasAssignment_1_1()); }
	(rule__ExplicitSelectedEntityCharacteristicReference__ProjectedCharacteristicAliasAssignment_1_1)
	{ after(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getProjectedCharacteristicAliasAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectedEntityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityExpression__Group__0__Impl
	rule__SelectedEntityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityExpressionAccess().getFromAssignment_0()); }
	(rule__SelectedEntityExpression__FromAssignment_0)
	{ after(grammarAccess.getSelectedEntityExpressionAccess().getFromAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityExpression__Group__1__Impl
	rule__SelectedEntityExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityExpressionAccess().getWhereAssignment_1()); }
	(rule__SelectedEntityExpression__WhereAssignment_1)?
	{ after(grammarAccess.getSelectedEntityExpressionAccess().getWhereAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityExpressionAccess().getOrderByAssignment_2()); }
	(rule__SelectedEntityExpression__OrderByAssignment_2)?
	{ after(grammarAccess.getSelectedEntityExpressionAccess().getOrderByAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FromClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromClause__Group__0__Impl
	rule__FromClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromClauseAccess().getFromKeyword_0()); }
	From
	{ after(grammarAccess.getFromClauseAccess().getFromKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromClauseAccess().getEntityAssignment_1()); }
	(rule__FromClause__EntityAssignment_1)
	{ after(grammarAccess.getFromClauseAccess().getEntityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityExpression__Group__0__Impl
	rule__EntityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityExpressionAccess().getSelectedEntityAssignment_0()); }
	(rule__EntityExpression__SelectedEntityAssignment_0)
	{ after(grammarAccess.getEntityExpressionAccess().getSelectedEntityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityExpressionAccess().getEjeAssignment_1()); }
	(rule__EntityExpression__EjeAssignment_1)*
	{ after(grammarAccess.getEntityExpressionAccess().getEjeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectedEntity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntity__Group__0__Impl
	rule__SelectedEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityAccess().getEntityTypeAssignment_0()); }
	(rule__SelectedEntity__EntityTypeAssignment_0)
	{ after(grammarAccess.getSelectedEntityAccess().getEntityTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityAccess().getGroup_1()); }
	(rule__SelectedEntity__Group_1__0)?
	{ after(grammarAccess.getSelectedEntityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectedEntity__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntity__Group_1__0__Impl
	rule__SelectedEntity__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntity__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityAccess().getKW_ASTerminalRuleCall_1_0()); }
	(RULE_KW_AS)?
	{ after(grammarAccess.getSelectedEntityAccess().getKW_ASTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntity__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntity__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntity__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityAccess().getSelectedEntityAliasAssignment_1_1()); }
	(rule__SelectedEntity__SelectedEntityAliasAssignment_1_1)
	{ after(grammarAccess.getSelectedEntityAccess().getSelectedEntityAliasAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityJoinExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityJoinExpression__Group__0__Impl
	rule__EntityJoinExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityJoinExpressionAccess().getKW_JOINTerminalRuleCall_0()); }
	RULE_KW_JOIN
	{ after(grammarAccess.getEntityJoinExpressionAccess().getKW_JOINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityJoinExpression__Group__1__Impl
	rule__EntityJoinExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityJoinExpressionAccess().getJoinEntityAssignment_1()); }
	(rule__EntityJoinExpression__JoinEntityAssignment_1)
	{ after(grammarAccess.getEntityJoinExpressionAccess().getJoinEntityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityJoinExpression__Group__2__Impl
	rule__EntityJoinExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityJoinExpressionAccess().getKW_ONTerminalRuleCall_2()); }
	RULE_KW_ON
	{ after(grammarAccess.getEntityJoinExpressionAccess().getKW_ONTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityJoinExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityJoinExpressionAccess().getEntityJoinCriteriaAssignment_3()); }
	(rule__EntityJoinExpression__EntityJoinCriteriaAssignment_3)
	{ after(grammarAccess.getEntityJoinExpressionAccess().getEntityJoinCriteriaAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityJoinCriteria__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityJoinCriteria__Group__0__Impl
	rule__EntityJoinCriteria__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinCriteria__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityJoinCriteriaAccess().getEtceeAssignment_0()); }
	(rule__EntityJoinCriteria__EtceeAssignment_0)
	{ after(grammarAccess.getEntityJoinCriteriaAccess().getEtceeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinCriteria__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityJoinCriteria__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinCriteria__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityJoinCriteriaAccess().getGroup_1()); }
	(rule__EntityJoinCriteria__Group_1__0)*
	{ after(grammarAccess.getEntityJoinCriteriaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityJoinCriteria__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityJoinCriteria__Group_1__0__Impl
	rule__EntityJoinCriteria__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinCriteria__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityJoinCriteriaAccess().getKW_ANDTerminalRuleCall_1_0()); }
	RULE_KW_AND
	{ after(grammarAccess.getEntityJoinCriteriaAccess().getKW_ANDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinCriteria__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityJoinCriteria__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinCriteria__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityJoinCriteriaAccess().getEtceeAssignment_1_1()); }
	(rule__EntityJoinCriteria__EtceeAssignment_1_1)
	{ after(grammarAccess.getEntityJoinCriteriaAccess().getEtceeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityTypeCharacteristicEquivalenceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityTypeCharacteristicEquivalenceExpression__Group__0__Impl
	rule__EntityTypeCharacteristicEquivalenceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeCharacteristicEquivalenceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getSecrAssignment_0()); }
	(rule__EntityTypeCharacteristicEquivalenceExpression__SecrAssignment_0)
	{ after(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getSecrAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeCharacteristicEquivalenceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityTypeCharacteristicEquivalenceExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeCharacteristicEquivalenceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getGroup_1()); }
	(rule__EntityTypeCharacteristicEquivalenceExpression__Group_1__0)?
	{ after(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityTypeCharacteristicEquivalenceExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityTypeCharacteristicEquivalenceExpression__Group_1__0__Impl
	rule__EntityTypeCharacteristicEquivalenceExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeCharacteristicEquivalenceExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getEQUALS_OPERATORTerminalRuleCall_1_0()); }
	RULE_EQUALS_OPERATOR
	{ after(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getEQUALS_OPERATORTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeCharacteristicEquivalenceExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityTypeCharacteristicEquivalenceExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeCharacteristicEquivalenceExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getSelectedEntityAssignment_1_1()); }
	(rule__EntityTypeCharacteristicEquivalenceExpression__SelectedEntityAssignment_1_1)
	{ after(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getSelectedEntityAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectedEntityCharacteristicReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityCharacteristicReference__Group__0__Impl
	rule__SelectedEntityCharacteristicReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getGroup_0()); }
	(rule__SelectedEntityCharacteristicReference__Group_0__0)?
	{ after(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityCharacteristicReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getCharacteristicAssignment_1()); }
	(rule__SelectedEntityCharacteristicReference__CharacteristicAssignment_1)
	{ after(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getCharacteristicAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectedEntityCharacteristicReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityCharacteristicReference__Group_0__0__Impl
	rule__SelectedEntityCharacteristicReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getSelectedEntityAssignment_0_0()); }
	(rule__SelectedEntityCharacteristicReference__SelectedEntityAssignment_0_0)
	{ after(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getSelectedEntityAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectedEntityCharacteristicReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getPERIODTerminalRuleCall_0_1()); }
	RULE_PERIOD
	{ after(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getPERIODTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhereClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__0__Impl
	rule__WhereClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getKW_WHERETerminalRuleCall_0()); }
	RULE_KW_WHERE
	{ after(grammarAccess.getWhereClauseAccess().getKW_WHERETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getCriteriaAssignment_1()); }
	(rule__WhereClause__CriteriaAssignment_1)
	{ after(grammarAccess.getWhereClauseAccess().getCriteriaAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderByClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderByClause__Group__0__Impl
	rule__OrderByClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderByClauseAccess().getKW_ORDERTerminalRuleCall_0()); }
	RULE_KW_ORDER
	{ after(grammarAccess.getOrderByClauseAccess().getKW_ORDERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderByClause__Group__1__Impl
	rule__OrderByClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderByClauseAccess().getKW_BYTerminalRuleCall_1()); }
	RULE_KW_BY
	{ after(grammarAccess.getOrderByClauseAccess().getKW_BYTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderByClause__Group__2__Impl
	rule__OrderByClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderByClauseAccess().getOrderingExpressionAssignment_2()); }
	(rule__OrderByClause__OrderingExpressionAssignment_2)
	{ after(grammarAccess.getOrderByClauseAccess().getOrderingExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderByClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderByClauseAccess().getGroup_3()); }
	(rule__OrderByClause__Group_3__0)*
	{ after(grammarAccess.getOrderByClauseAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderByClause__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderByClause__Group_3__0__Impl
	rule__OrderByClause__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderByClauseAccess().getCOMMATerminalRuleCall_3_0()); }
	RULE_COMMA
	{ after(grammarAccess.getOrderByClauseAccess().getCOMMATerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderByClause__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderByClauseAccess().getOrderingExpressionAssignment_3_1()); }
	(rule__OrderByClause__OrderingExpressionAssignment_3_1)
	{ after(grammarAccess.getOrderByClauseAccess().getOrderingExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrderingExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderingExpression__Group__0__Impl
	rule__OrderingExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderingExpressionAccess().getCharacteristicAssignment_0()); }
	(rule__OrderingExpression__CharacteristicAssignment_0)
	{ after(grammarAccess.getOrderingExpressionAccess().getCharacteristicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrderingExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderingExpressionAccess().getOrderingTypeAssignment_1()); }
	(rule__OrderingExpression__OrderingTypeAssignment_1)?
	{ after(grammarAccess.getOrderingExpressionAccess().getOrderingTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedProjectedCharacteristicReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedProjectedCharacteristicReference__Group__0__Impl
	rule__QualifiedProjectedCharacteristicReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedProjectedCharacteristicReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getSelectedEntityReferenceAssignment_0()); }
	(rule__QualifiedProjectedCharacteristicReference__SelectedEntityReferenceAssignment_0)
	{ after(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getSelectedEntityReferenceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedProjectedCharacteristicReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedProjectedCharacteristicReference__Group__1__Impl
	rule__QualifiedProjectedCharacteristicReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedProjectedCharacteristicReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getPERIODTerminalRuleCall_1()); }
	RULE_PERIOD
	{ after(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getPERIODTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedProjectedCharacteristicReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedProjectedCharacteristicReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedProjectedCharacteristicReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getCharacteristicAssignment_2()); }
	(rule__QualifiedProjectedCharacteristicReference__CharacteristicAssignment_2)
	{ after(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getCharacteristicAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__0__Impl
	rule__BooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getTermAssignment_0()); }
	(rule__BooleanExpression__TermAssignment_0)
	{ after(grammarAccess.getBooleanExpressionAccess().getTermAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getGroup_1()); }
	(rule__BooleanExpression__Group_1__0)*
	{ after(grammarAccess.getBooleanExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group_1__0__Impl
	rule__BooleanExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getKW_ORTerminalRuleCall_1_0()); }
	RULE_KW_OR
	{ after(grammarAccess.getBooleanExpressionAccess().getKW_ORTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getTermAssignment_1_1()); }
	(rule__BooleanExpression__TermAssignment_1_1)
	{ after(grammarAccess.getBooleanExpressionAccess().getTermAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanTerm__Group__0__Impl
	rule__BooleanTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTermAccess().getFactorAssignment_0()); }
	(rule__BooleanTerm__FactorAssignment_0)
	{ after(grammarAccess.getBooleanTermAccess().getFactorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTermAccess().getGroup_1()); }
	(rule__BooleanTerm__Group_1__0)*
	{ after(grammarAccess.getBooleanTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanTerm__Group_1__0__Impl
	rule__BooleanTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTermAccess().getKW_ANDTerminalRuleCall_1_0()); }
	RULE_KW_AND
	{ after(grammarAccess.getBooleanTermAccess().getKW_ANDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanTerm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTermAccess().getFactorAssignment_1_1()); }
	(rule__BooleanTerm__FactorAssignment_1_1)
	{ after(grammarAccess.getBooleanTermAccess().getFactorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanFactor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanFactor__Group__0__Impl
	rule__BooleanFactor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFactor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanFactorAccess().getNotAssignment_0()); }
	(rule__BooleanFactor__NotAssignment_0)?
	{ after(grammarAccess.getBooleanFactorAccess().getNotAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFactor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanFactor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFactor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanFactorAccess().getPredAssignment_1()); }
	(rule__BooleanFactor__PredAssignment_1)
	{ after(grammarAccess.getBooleanFactorAccess().getPredAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanPredicate__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanPredicate__Group_2__0__Impl
	rule__BooleanPredicate__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPredicate__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanPredicateAccess().getLEFT_PARENTerminalRuleCall_2_0()); }
	RULE_LEFT_PAREN
	{ after(grammarAccess.getBooleanPredicateAccess().getLEFT_PARENTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPredicate__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanPredicate__Group_2__1__Impl
	rule__BooleanPredicate__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPredicate__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanPredicateAccess().getBooleanExpressionParserRuleCall_2_1()); }
	ruleBooleanExpression
	{ after(grammarAccess.getBooleanPredicateAccess().getBooleanExpressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPredicate__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanPredicate__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPredicate__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanPredicateAccess().getRIGHT_PARENTerminalRuleCall_2_2()); }
	RULE_RIGHT_PAREN
	{ after(grammarAccess.getBooleanPredicateAccess().getRIGHT_PARENTerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarComparePredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarComparePredicate__Group__0__Impl
	rule__ScalarComparePredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarComparePredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarComparePredicateAccess().getLeftAssignment_0()); }
	(rule__ScalarComparePredicate__LeftAssignment_0)
	{ after(grammarAccess.getScalarComparePredicateAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarComparePredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarComparePredicate__Group__1__Impl
	rule__ScalarComparePredicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarComparePredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarComparePredicateAccess().getOpAssignment_1()); }
	(rule__ScalarComparePredicate__OpAssignment_1)
	{ after(grammarAccess.getScalarComparePredicateAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarComparePredicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarComparePredicate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarComparePredicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarComparePredicateAccess().getRightAssignment_2()); }
	(rule__ScalarComparePredicate__RightAssignment_2)
	{ after(grammarAccess.getScalarComparePredicateAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicBasisSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicBasisSet__Group__0__Impl
	rule__CharacteristicBasisSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicBasisSetAccess().getLEFT_PARENTerminalRuleCall_0()); }
	RULE_LEFT_PAREN
	{ after(grammarAccess.getCharacteristicBasisSetAccess().getLEFT_PARENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicBasisSet__Group__1__Impl
	rule__CharacteristicBasisSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicBasisSetAccess().getCharacteristicBasisAssignment_1()); }
	(rule__CharacteristicBasisSet__CharacteristicBasisAssignment_1)
	{ after(grammarAccess.getCharacteristicBasisSetAccess().getCharacteristicBasisAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicBasisSet__Group__2__Impl
	rule__CharacteristicBasisSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicBasisSetAccess().getGroup_2()); }
	(rule__CharacteristicBasisSet__Group_2__0)*
	{ after(grammarAccess.getCharacteristicBasisSetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicBasisSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicBasisSetAccess().getRIGHT_PARENTerminalRuleCall_3()); }
	RULE_RIGHT_PAREN
	{ after(grammarAccess.getCharacteristicBasisSetAccess().getRIGHT_PARENTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicBasisSet__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicBasisSet__Group_2__0__Impl
	rule__CharacteristicBasisSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicBasisSetAccess().getCOMMATerminalRuleCall_2_0()); }
	RULE_COMMA
	{ after(grammarAccess.getCharacteristicBasisSetAccess().getCOMMATerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicBasisSet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicBasisSetAccess().getCharacteristicBasisAssignment_2_1()); }
	(rule__CharacteristicBasisSet__CharacteristicBasisAssignment_2_1)
	{ after(grammarAccess.getCharacteristicBasisSetAccess().getCharacteristicBasisAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsPredicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsPredicate__Group__0__Impl
	rule__ExistsPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsPredicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsPredicateAccess().getKW_EXISTSTerminalRuleCall_0()); }
	RULE_KW_EXISTS
	{ after(grammarAccess.getExistsPredicateAccess().getKW_EXISTSTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsPredicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistsPredicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsPredicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistsPredicateAccess().getSubAssignment_1()); }
	(rule__ExistsPredicate__SubAssignment_1)
	{ after(grammarAccess.getExistsPredicateAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subquery__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subquery__Group__0__Impl
	rule__Subquery__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subquery__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubqueryAccess().getLEFT_PARENTerminalRuleCall_0()); }
	RULE_LEFT_PAREN
	{ after(grammarAccess.getSubqueryAccess().getLEFT_PARENTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subquery__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subquery__Group__1__Impl
	rule__Subquery__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subquery__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubqueryAccess().getQueryAssignment_1()); }
	(rule__Subquery__QueryAssignment_1)
	{ after(grammarAccess.getSubqueryAccess().getQueryAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subquery__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subquery__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subquery__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubqueryAccess().getRIGHT_PARENTerminalRuleCall_2()); }
	RULE_RIGHT_PAREN
	{ after(grammarAccess.getSubqueryAccess().getRIGHT_PARENTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumLiteralSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralSet__Group__0__Impl
	rule__EnumLiteralSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralSetAccess().getLEFT_BRACETerminalRuleCall_0()); }
	RULE_LEFT_BRACE
	{ after(grammarAccess.getEnumLiteralSetAccess().getLEFT_BRACETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralSet__Group__1__Impl
	rule__EnumLiteralSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralSetAccess().getTypeAssignment_1()); }
	(rule__EnumLiteralSet__TypeAssignment_1)
	{ after(grammarAccess.getEnumLiteralSetAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralSet__Group__2__Impl
	rule__EnumLiteralSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralSetAccess().getCOLONTerminalRuleCall_2()); }
	RULE_COLON
	{ after(grammarAccess.getEnumLiteralSetAccess().getCOLONTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralSet__Group__3__Impl
	rule__EnumLiteralSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralSetAccess().getLiteralAssignment_3()); }
	(rule__EnumLiteralSet__LiteralAssignment_3)
	{ after(grammarAccess.getEnumLiteralSetAccess().getLiteralAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralSet__Group__4__Impl
	rule__EnumLiteralSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralSetAccess().getGroup_4()); }
	(rule__EnumLiteralSet__Group_4__0)*
	{ after(grammarAccess.getEnumLiteralSetAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralSet__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralSetAccess().getRIGHT_BRACETerminalRuleCall_5()); }
	RULE_RIGHT_BRACE
	{ after(grammarAccess.getEnumLiteralSetAccess().getRIGHT_BRACETerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumLiteralSet__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralSet__Group_4__0__Impl
	rule__EnumLiteralSet__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralSetAccess().getCOMMATerminalRuleCall_4_0()); }
	RULE_COMMA
	{ after(grammarAccess.getEnumLiteralSetAccess().getCOMMATerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralSet__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralSetAccess().getLiteralAssignment_4_1()); }
	(rule__EnumLiteralSet__LiteralAssignment_4_1)
	{ after(grammarAccess.getEnumLiteralSetAccess().getLiteralAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumLiteralReferenceExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralReferenceExpression__Group__0__Impl
	rule__EnumLiteralReferenceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralReferenceExpressionAccess().getLEFT_BRACETerminalRuleCall_0()); }
	RULE_LEFT_BRACE
	{ after(grammarAccess.getEnumLiteralReferenceExpressionAccess().getLEFT_BRACETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralReferenceExpression__Group__1__Impl
	rule__EnumLiteralReferenceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralReferenceExpressionAccess().getTypAssignment_1()); }
	(rule__EnumLiteralReferenceExpression__TypAssignment_1)
	{ after(grammarAccess.getEnumLiteralReferenceExpressionAccess().getTypAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralReferenceExpression__Group__2__Impl
	rule__EnumLiteralReferenceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralReferenceExpressionAccess().getCOLONTerminalRuleCall_2()); }
	RULE_COLON
	{ after(grammarAccess.getEnumLiteralReferenceExpressionAccess().getCOLONTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralReferenceExpression__Group__3__Impl
	rule__EnumLiteralReferenceExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralReferenceExpressionAccess().getLiteralAssignment_3()); }
	(rule__EnumLiteralReferenceExpression__LiteralAssignment_3)
	{ after(grammarAccess.getEnumLiteralReferenceExpressionAccess().getLiteralAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteralReferenceExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralReferenceExpressionAccess().getRIGHT_BRACETerminalRuleCall_4()); }
	RULE_RIGHT_BRACE
	{ after(grammarAccess.getEnumLiteralReferenceExpressionAccess().getRIGHT_BRACETerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryStatement__QualifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryStatementAccess().getQualifierSetQualifierParserRuleCall_1_0()); }
		ruleSetQualifier
		{ after(grammarAccess.getQueryStatementAccess().getQualifierSetQualifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__ProjectedCharacteristicListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryStatementAccess().getProjectedCharacteristicListProjectedCharacteristicListParserRuleCall_2_0()); }
		ruleProjectedCharacteristicList
		{ after(grammarAccess.getQueryStatementAccess().getProjectedCharacteristicListProjectedCharacteristicListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryStatement__SelectedEntityExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryStatementAccess().getSelectedEntityExpressionSelectedEntityExpressionParserRuleCall_3_0()); }
		ruleSelectedEntityExpression
		{ after(grammarAccess.getQueryStatementAccess().getSelectedEntityExpressionSelectedEntityExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__AllAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectedCharacteristicListAccess().getAllALL_CHARACTERISTICSTerminalRuleCall_0_0()); }
		RULE_ALL_CHARACTERISTICS
		{ after(grammarAccess.getProjectedCharacteristicListAccess().getAllALL_CHARACTERISTICSTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__CharacteristicAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectedCharacteristicListAccess().getCharacteristicProjectedCharacteristicExpressionParserRuleCall_1_0_0()); }
		ruleProjectedCharacteristicExpression
		{ after(grammarAccess.getProjectedCharacteristicListAccess().getCharacteristicProjectedCharacteristicExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectedCharacteristicList__CharacteristicAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectedCharacteristicListAccess().getCharacteristicProjectedCharacteristicExpressionParserRuleCall_1_1_1_0()); }
		ruleProjectedCharacteristicExpression
		{ after(grammarAccess.getProjectedCharacteristicListAccess().getCharacteristicProjectedCharacteristicExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicWildcardReference__SelectedEntityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getSelectedEntitySelectedEntityReferenceParserRuleCall_0_0()); }
		ruleSelectedEntityReference
		{ after(grammarAccess.getSelectedEntityCharacteristicWildcardReferenceAccess().getSelectedEntitySelectedEntityReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitSelectedEntityCharacteristicReference__SelectedEntityCharacteristicReferenceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getSelectedEntityCharacteristicReferenceSelectedEntityCharacteristicReferenceParserRuleCall_0_0()); }
		ruleSelectedEntityCharacteristicReference
		{ after(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getSelectedEntityCharacteristicReferenceSelectedEntityCharacteristicReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitSelectedEntityCharacteristicReference__ProjectedCharacteristicAliasAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getProjectedCharacteristicAliasProjectedCharacteristicAliasParserRuleCall_1_1_0()); }
		ruleProjectedCharacteristicAlias
		{ after(grammarAccess.getExplicitSelectedEntityCharacteristicReferenceAccess().getProjectedCharacteristicAliasProjectedCharacteristicAliasParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityExpression__FromAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectedEntityExpressionAccess().getFromFromClauseParserRuleCall_0_0()); }
		ruleFromClause
		{ after(grammarAccess.getSelectedEntityExpressionAccess().getFromFromClauseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityExpression__WhereAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectedEntityExpressionAccess().getWhereWhereClauseParserRuleCall_1_0()); }
		ruleWhereClause
		{ after(grammarAccess.getSelectedEntityExpressionAccess().getWhereWhereClauseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityExpression__OrderByAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectedEntityExpressionAccess().getOrderByOrderByClauseParserRuleCall_2_0()); }
		ruleOrderByClause
		{ after(grammarAccess.getSelectedEntityExpressionAccess().getOrderByOrderByClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__EntityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromClauseAccess().getEntityEntityExpressionParserRuleCall_1_0()); }
		ruleEntityExpression
		{ after(grammarAccess.getFromClauseAccess().getEntityEntityExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__SelectedEntityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityExpressionAccess().getSelectedEntitySelectedEntityParserRuleCall_0_0()); }
		ruleSelectedEntity
		{ after(grammarAccess.getEntityExpressionAccess().getSelectedEntitySelectedEntityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityExpression__EjeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityExpressionAccess().getEjeEntityJoinExpressionParserRuleCall_1_0()); }
		ruleEntityJoinExpression
		{ after(grammarAccess.getEntityExpressionAccess().getEjeEntityJoinExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntity__EntityTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectedEntityAccess().getEntityTypeEntityTypeReferenceParserRuleCall_0_0()); }
		ruleEntityTypeReference
		{ after(grammarAccess.getSelectedEntityAccess().getEntityTypeEntityTypeReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntity__SelectedEntityAliasAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectedEntityAccess().getSelectedEntityAliasSelectedEntityAliasParserRuleCall_1_1_0()); }
		ruleSelectedEntityAlias
		{ after(grammarAccess.getSelectedEntityAccess().getSelectedEntityAliasSelectedEntityAliasParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinExpression__JoinEntityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityJoinExpressionAccess().getJoinEntityJoinEntityParserRuleCall_1_0()); }
		ruleJoinEntity
		{ after(grammarAccess.getEntityJoinExpressionAccess().getJoinEntityJoinEntityParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinExpression__EntityJoinCriteriaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityJoinExpressionAccess().getEntityJoinCriteriaEntityJoinCriteriaParserRuleCall_3_0()); }
		ruleEntityJoinCriteria
		{ after(grammarAccess.getEntityJoinExpressionAccess().getEntityJoinCriteriaEntityJoinCriteriaParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinCriteria__EtceeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityJoinCriteriaAccess().getEtceeEntityTypeCharacteristicEquivalenceExpressionParserRuleCall_0_0()); }
		ruleEntityTypeCharacteristicEquivalenceExpression
		{ after(grammarAccess.getEntityJoinCriteriaAccess().getEtceeEntityTypeCharacteristicEquivalenceExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityJoinCriteria__EtceeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityJoinCriteriaAccess().getEtceeEntityTypeCharacteristicEquivalenceExpressionParserRuleCall_1_1_0()); }
		ruleEntityTypeCharacteristicEquivalenceExpression
		{ after(grammarAccess.getEntityJoinCriteriaAccess().getEtceeEntityTypeCharacteristicEquivalenceExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeCharacteristicEquivalenceExpression__SecrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getSecrSelectedEntityCharacteristicReferenceParserRuleCall_0_0()); }
		ruleSelectedEntityCharacteristicReference
		{ after(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getSecrSelectedEntityCharacteristicReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityTypeCharacteristicEquivalenceExpression__SelectedEntityAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getSelectedEntitySelectedEntityReferenceParserRuleCall_1_1_0()); }
		ruleSelectedEntityReference
		{ after(grammarAccess.getEntityTypeCharacteristicEquivalenceExpressionAccess().getSelectedEntitySelectedEntityReferenceParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicReference__SelectedEntityAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getSelectedEntitySelectedEntityReferenceParserRuleCall_0_0_0()); }
		ruleSelectedEntityReference
		{ after(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getSelectedEntitySelectedEntityReferenceParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectedEntityCharacteristicReference__CharacteristicAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getCharacteristicCharacteristicReferenceParserRuleCall_1_0()); }
		ruleCharacteristicReference
		{ after(grammarAccess.getSelectedEntityCharacteristicReferenceAccess().getCharacteristicCharacteristicReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__CriteriaAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereClauseAccess().getCriteriaCriteriaParserRuleCall_1_0()); }
		ruleCriteria
		{ after(grammarAccess.getWhereClauseAccess().getCriteriaCriteriaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__OrderingExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderByClauseAccess().getOrderingExpressionOrderingExpressionParserRuleCall_2_0()); }
		ruleOrderingExpression
		{ after(grammarAccess.getOrderByClauseAccess().getOrderingExpressionOrderingExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__OrderingExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderByClauseAccess().getOrderingExpressionOrderingExpressionParserRuleCall_3_1_0()); }
		ruleOrderingExpression
		{ after(grammarAccess.getOrderByClauseAccess().getOrderingExpressionOrderingExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingExpression__CharacteristicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderingExpressionAccess().getCharacteristicProjectedCharacteristicReferenceParserRuleCall_0_0()); }
		ruleProjectedCharacteristicReference
		{ after(grammarAccess.getOrderingExpressionAccess().getCharacteristicProjectedCharacteristicReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingExpression__OrderingTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderingExpressionAccess().getOrderingTypeOrderingTypeParserRuleCall_1_0()); }
		ruleOrderingType
		{ after(grammarAccess.getOrderingExpressionAccess().getOrderingTypeOrderingTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedProjectedCharacteristicReference__SelectedEntityReferenceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getSelectedEntityReferenceSelectedEntityReferenceParserRuleCall_0_0()); }
		ruleSelectedEntityReference
		{ after(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getSelectedEntityReferenceSelectedEntityReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedProjectedCharacteristicReference__CharacteristicAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getCharacteristicCharacteristicReferenceParserRuleCall_2_0()); }
		ruleCharacteristicReference
		{ after(grammarAccess.getQualifiedProjectedCharacteristicReferenceAccess().getCharacteristicCharacteristicReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__TermAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getTermBooleanTermParserRuleCall_0_0()); }
		ruleBooleanTerm
		{ after(grammarAccess.getBooleanExpressionAccess().getTermBooleanTermParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__TermAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getTermBooleanTermParserRuleCall_1_1_0()); }
		ruleBooleanTerm
		{ after(grammarAccess.getBooleanExpressionAccess().getTermBooleanTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__FactorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTermAccess().getFactorBooleanFactorParserRuleCall_0_0()); }
		ruleBooleanFactor
		{ after(grammarAccess.getBooleanTermAccess().getFactorBooleanFactorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__FactorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTermAccess().getFactorBooleanFactorParserRuleCall_1_1_0()); }
		ruleBooleanFactor
		{ after(grammarAccess.getBooleanTermAccess().getFactorBooleanFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFactor__NotAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanFactorAccess().getNotKW_NOTTerminalRuleCall_0_0()); }
		RULE_KW_NOT
		{ after(grammarAccess.getBooleanFactorAccess().getNotKW_NOTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFactor__PredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanFactorAccess().getPredBooleanPredicateParserRuleCall_1_0()); }
		ruleBooleanPredicate
		{ after(grammarAccess.getBooleanFactorAccess().getPredBooleanPredicateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarComparePredicate__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarComparePredicateAccess().getLeftPredicateTermParserRuleCall_0_0()); }
		rulePredicateTerm
		{ after(grammarAccess.getScalarComparePredicateAccess().getLeftPredicateTermParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarComparePredicate__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarComparePredicateAccess().getOpCompareOperatorParserRuleCall_1_0()); }
		ruleCompareOperator
		{ after(grammarAccess.getScalarComparePredicateAccess().getOpCompareOperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarComparePredicate__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarComparePredicateAccess().getRightPredicateTermParserRuleCall_2_0()); }
		rulePredicateTerm
		{ after(grammarAccess.getScalarComparePredicateAccess().getRightPredicateTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__CharacteristicBasisAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicBasisSetAccess().getCharacteristicBasisCharacteristicBasisParserRuleCall_1_0()); }
		ruleCharacteristicBasis
		{ after(grammarAccess.getCharacteristicBasisSetAccess().getCharacteristicBasisCharacteristicBasisParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicBasisSet__CharacteristicBasisAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicBasisSetAccess().getCharacteristicBasisCharacteristicBasisParserRuleCall_2_1_0()); }
		ruleCharacteristicBasis
		{ after(grammarAccess.getCharacteristicBasisSetAccess().getCharacteristicBasisCharacteristicBasisParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsPredicate__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistsPredicateAccess().getSubSubqueryParserRuleCall_1_0()); }
		ruleSubquery
		{ after(grammarAccess.getExistsPredicateAccess().getSubSubqueryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subquery__QueryAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubqueryAccess().getQueryQueryStatementParserRuleCall_1_0()); }
		ruleQueryStatement
		{ after(grammarAccess.getSubqueryAccess().getQueryQueryStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralSetAccess().getTypeEnumerationTypeReferenceParserRuleCall_1_0()); }
		ruleEnumerationTypeReference
		{ after(grammarAccess.getEnumLiteralSetAccess().getTypeEnumerationTypeReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__LiteralAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralSetAccess().getLiteralEnumerationLiteralReferenceParserRuleCall_3_0()); }
		ruleEnumerationLiteralReference
		{ after(grammarAccess.getEnumLiteralSetAccess().getLiteralEnumerationLiteralReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralSet__LiteralAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralSetAccess().getLiteralEnumerationLiteralReferenceParserRuleCall_4_1_0()); }
		ruleEnumerationLiteralReference
		{ after(grammarAccess.getEnumLiteralSetAccess().getLiteralEnumerationLiteralReferenceParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__TypAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralReferenceExpressionAccess().getTypEnumerationTypeReferenceParserRuleCall_1_0()); }
		ruleEnumerationTypeReference
		{ after(grammarAccess.getEnumLiteralReferenceExpressionAccess().getTypEnumerationTypeReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteralReferenceExpression__LiteralAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralReferenceExpressionAccess().getLiteralEnumerationLiteralReferenceParserRuleCall_3_0()); }
		ruleEnumerationLiteralReference
		{ after(grammarAccess.getEnumLiteralReferenceExpressionAccess().getLiteralEnumerationLiteralReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryIdentifier__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryIdentifierAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getQueryIdentifierAccess().getIdIDENTIFIERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

/**
 * generated by Xtext 2.32.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.uddl.query.query.impl;

import com.epistimis.uddl.query.query.BooleanExpression;
import com.epistimis.uddl.query.query.BooleanFactor;
import com.epistimis.uddl.query.query.BooleanPredicate;
import com.epistimis.uddl.query.query.BooleanTerm;
import com.epistimis.uddl.query.query.CharacteristicBasis;
import com.epistimis.uddl.query.query.CharacteristicBasisSet;
import com.epistimis.uddl.query.query.CharacteristicReference;
import com.epistimis.uddl.query.query.CompareSet;
import com.epistimis.uddl.query.query.Criteria;
import com.epistimis.uddl.query.query.EntityExpression;
import com.epistimis.uddl.query.query.EntityJoinCriteria;
import com.epistimis.uddl.query.query.EntityJoinExpression;
import com.epistimis.uddl.query.query.EntityTypeCharacteristicEquivalenceExpression;
import com.epistimis.uddl.query.query.EntityTypeReference;
import com.epistimis.uddl.query.query.EnumLiteralReferenceExpression;
import com.epistimis.uddl.query.query.EnumLiteralSet;
import com.epistimis.uddl.query.query.EnumerationLiteralReference;
import com.epistimis.uddl.query.query.EnumerationTypeReference;
import com.epistimis.uddl.query.query.ExistsPredicate;
import com.epistimis.uddl.query.query.ExplicitSelectedEntityCharacteristicReference;
import com.epistimis.uddl.query.query.FromClause;
import com.epistimis.uddl.query.query.JoinEntity;
import com.epistimis.uddl.query.query.LogicalSet;
import com.epistimis.uddl.query.query.OrderByClause;
import com.epistimis.uddl.query.query.OrderingExpression;
import com.epistimis.uddl.query.query.PredicateTerm;
import com.epistimis.uddl.query.query.ProjectedCharacteristicAlias;
import com.epistimis.uddl.query.query.ProjectedCharacteristicExpression;
import com.epistimis.uddl.query.query.ProjectedCharacteristicList;
import com.epistimis.uddl.query.query.ProjectedCharacteristicReference;
import com.epistimis.uddl.query.query.QualifiedProjectedCharacteristicReference;
import com.epistimis.uddl.query.query.QueryFactory;
import com.epistimis.uddl.query.query.QueryIdentifier;
import com.epistimis.uddl.query.query.QueryPackage;
import com.epistimis.uddl.query.query.QuerySpecification;
import com.epistimis.uddl.query.query.QueryStatement;
import com.epistimis.uddl.query.query.ScalarComparePredicate;
import com.epistimis.uddl.query.query.SelectedEntity;
import com.epistimis.uddl.query.query.SelectedEntityAlias;
import com.epistimis.uddl.query.query.SelectedEntityCharacteristicReference;
import com.epistimis.uddl.query.query.SelectedEntityCharacteristicWildcardReference;
import com.epistimis.uddl.query.query.SelectedEntityExpression;
import com.epistimis.uddl.query.query.SelectedEntityReference;
import com.epistimis.uddl.query.query.SetComparePredicate;
import com.epistimis.uddl.query.query.SetMembershipPredicate;
import com.epistimis.uddl.query.query.Subquery;
import com.epistimis.uddl.query.query.UnqualifiedProjectedCharacteristicReferenceOrAlias;
import com.epistimis.uddl.query.query.WhereClause;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class QueryPackageImpl extends EPackageImpl implements QueryPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass querySpecificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass queryStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass projectedCharacteristicListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass projectedCharacteristicExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectedEntityCharacteristicWildcardReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass explicitSelectedEntityCharacteristicReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectedEntityExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fromClauseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectedEntityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityJoinExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass joinEntityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityJoinCriteriaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityTypeCharacteristicEquivalenceExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectedEntityCharacteristicReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectedEntityReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass whereClauseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass criteriaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orderByClauseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orderingExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass projectedCharacteristicReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass qualifiedProjectedCharacteristicReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unqualifiedProjectedCharacteristicReferenceOrAliasEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanFactorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass scalarComparePredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setMembershipPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicalSetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass characteristicBasisSetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setComparePredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass compareSetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass existsPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass predicateTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass characteristicBasisEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subqueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass characteristicReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityTypeReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumLiteralSetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumLiteralReferenceExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumerationTypeReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumerationLiteralReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectedEntityAliasEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass projectedCharacteristicAliasEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass queryIdentifierEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see com.epistimis.uddl.query.query.QueryPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private QueryPackageImpl()
  {
    super(eNS_URI, QueryFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link QueryPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static QueryPackage init()
  {
    if (isInited) return (QueryPackage)EPackage.Registry.INSTANCE.getEPackage(QueryPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredQueryPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    QueryPackageImpl theQueryPackage = registeredQueryPackage instanceof QueryPackageImpl ? (QueryPackageImpl)registeredQueryPackage : new QueryPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theQueryPackage.createPackageContents();

    // Initialize created meta-data
    theQueryPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theQueryPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(QueryPackage.eNS_URI, theQueryPackage);
    return theQueryPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getQuerySpecification()
  {
    return querySpecificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getQueryStatement()
  {
    return queryStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getQueryStatement_Qualifier()
  {
    return (EAttribute)queryStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQueryStatement_ProjectedCharacteristicList()
  {
    return (EReference)queryStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQueryStatement_SelectedEntityExpression()
  {
    return (EReference)queryStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProjectedCharacteristicList()
  {
    return projectedCharacteristicListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getProjectedCharacteristicList_All()
  {
    return (EAttribute)projectedCharacteristicListEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProjectedCharacteristicList_Characteristic()
  {
    return (EReference)projectedCharacteristicListEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProjectedCharacteristicExpression()
  {
    return projectedCharacteristicExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectedEntityCharacteristicWildcardReference()
  {
    return selectedEntityCharacteristicWildcardReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectedEntityCharacteristicWildcardReference_SelectedEntity()
  {
    return (EReference)selectedEntityCharacteristicWildcardReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExplicitSelectedEntityCharacteristicReference()
  {
    return explicitSelectedEntityCharacteristicReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExplicitSelectedEntityCharacteristicReference_SelectedEntityCharacteristicReference()
  {
    return (EReference)explicitSelectedEntityCharacteristicReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExplicitSelectedEntityCharacteristicReference_ProjectedCharacteristicAlias()
  {
    return (EReference)explicitSelectedEntityCharacteristicReferenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectedEntityExpression()
  {
    return selectedEntityExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectedEntityExpression_From()
  {
    return (EReference)selectedEntityExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectedEntityExpression_Where()
  {
    return (EReference)selectedEntityExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectedEntityExpression_OrderBy()
  {
    return (EReference)selectedEntityExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFromClause()
  {
    return fromClauseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFromClause_Entity()
  {
    return (EReference)fromClauseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityExpression()
  {
    return entityExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityExpression_SelectedEntity()
  {
    return (EReference)entityExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityExpression_Eje()
  {
    return (EReference)entityExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectedEntity()
  {
    return selectedEntityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectedEntity_EntityType()
  {
    return (EReference)selectedEntityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectedEntity_SelectedEntityAlias()
  {
    return (EReference)selectedEntityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityJoinExpression()
  {
    return entityJoinExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityJoinExpression_JoinEntity()
  {
    return (EReference)entityJoinExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityJoinExpression_EntityJoinCriteria()
  {
    return (EReference)entityJoinExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJoinEntity()
  {
    return joinEntityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityJoinCriteria()
  {
    return entityJoinCriteriaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityJoinCriteria_Etcee()
  {
    return (EReference)entityJoinCriteriaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityTypeCharacteristicEquivalenceExpression()
  {
    return entityTypeCharacteristicEquivalenceExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityTypeCharacteristicEquivalenceExpression_Secr()
  {
    return (EReference)entityTypeCharacteristicEquivalenceExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityTypeCharacteristicEquivalenceExpression_SelectedEntity()
  {
    return (EReference)entityTypeCharacteristicEquivalenceExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectedEntityCharacteristicReference()
  {
    return selectedEntityCharacteristicReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectedEntityCharacteristicReference_SelectedEntity()
  {
    return (EReference)selectedEntityCharacteristicReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectedEntityCharacteristicReference_Characteristic()
  {
    return (EReference)selectedEntityCharacteristicReferenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectedEntityReference()
  {
    return selectedEntityReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWhereClause()
  {
    return whereClauseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWhereClause_Criteria()
  {
    return (EReference)whereClauseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCriteria()
  {
    return criteriaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOrderByClause()
  {
    return orderByClauseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOrderByClause_OrderingExpression()
  {
    return (EReference)orderByClauseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOrderingExpression()
  {
    return orderingExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOrderingExpression_Characteristic()
  {
    return (EReference)orderingExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOrderingExpression_OrderingType()
  {
    return (EAttribute)orderingExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProjectedCharacteristicReference()
  {
    return projectedCharacteristicReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getQualifiedProjectedCharacteristicReference()
  {
    return qualifiedProjectedCharacteristicReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQualifiedProjectedCharacteristicReference_SelectedEntityReference()
  {
    return (EReference)qualifiedProjectedCharacteristicReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQualifiedProjectedCharacteristicReference_Characteristic()
  {
    return (EReference)qualifiedProjectedCharacteristicReferenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUnqualifiedProjectedCharacteristicReferenceOrAlias()
  {
    return unqualifiedProjectedCharacteristicReferenceOrAliasEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBooleanExpression()
  {
    return booleanExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBooleanExpression_Term()
  {
    return (EReference)booleanExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBooleanTerm()
  {
    return booleanTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBooleanTerm_Factor()
  {
    return (EReference)booleanTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBooleanFactor()
  {
    return booleanFactorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBooleanFactor_Not()
  {
    return (EAttribute)booleanFactorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBooleanFactor_Pred()
  {
    return (EReference)booleanFactorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBooleanPredicate()
  {
    return booleanPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getScalarComparePredicate()
  {
    return scalarComparePredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getScalarComparePredicate_Left()
  {
    return (EReference)scalarComparePredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getScalarComparePredicate_Op()
  {
    return (EAttribute)scalarComparePredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getScalarComparePredicate_Right()
  {
    return (EReference)scalarComparePredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetMembershipPredicate()
  {
    return setMembershipPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetMembershipPredicate_Left()
  {
    return (EReference)setMembershipPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetMembershipPredicate_Not()
  {
    return (EAttribute)setMembershipPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetMembershipPredicate_Set()
  {
    return (EReference)setMembershipPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogicalSet()
  {
    return logicalSetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCharacteristicBasisSet()
  {
    return characteristicBasisSetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCharacteristicBasisSet_CharacteristicBasis()
  {
    return (EReference)characteristicBasisSetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetComparePredicate()
  {
    return setComparePredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetComparePredicate_Pred()
  {
    return (EReference)setComparePredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetComparePredicate_Op()
  {
    return (EAttribute)setComparePredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetComparePredicate_Quantifier()
  {
    return (EAttribute)setComparePredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetComparePredicate_Set()
  {
    return (EReference)setComparePredicateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCompareSet()
  {
    return compareSetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExistsPredicate()
  {
    return existsPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExistsPredicate_Sub()
  {
    return (EReference)existsPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPredicateTerm()
  {
    return predicateTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCharacteristicBasis()
  {
    return characteristicBasisEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubquery()
  {
    return subqueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubquery_Query()
  {
    return (EReference)subqueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCharacteristicReference()
  {
    return characteristicReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityTypeReference()
  {
    return entityTypeReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumLiteralSet()
  {
    return enumLiteralSetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumLiteralSet_Type()
  {
    return (EReference)enumLiteralSetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumLiteralSet_Literal()
  {
    return (EReference)enumLiteralSetEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumLiteralReferenceExpression()
  {
    return enumLiteralReferenceExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumLiteralReferenceExpression_Typ()
  {
    return (EReference)enumLiteralReferenceExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumLiteralReferenceExpression_Literal()
  {
    return (EReference)enumLiteralReferenceExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumerationTypeReference()
  {
    return enumerationTypeReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumerationLiteralReference()
  {
    return enumerationLiteralReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectedEntityAlias()
  {
    return selectedEntityAliasEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProjectedCharacteristicAlias()
  {
    return projectedCharacteristicAliasEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getQueryIdentifier()
  {
    return queryIdentifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getQueryIdentifier_Id()
  {
    return (EAttribute)queryIdentifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QueryFactory getQueryFactory()
  {
    return (QueryFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    querySpecificationEClass = createEClass(QUERY_SPECIFICATION);

    queryStatementEClass = createEClass(QUERY_STATEMENT);
    createEAttribute(queryStatementEClass, QUERY_STATEMENT__QUALIFIER);
    createEReference(queryStatementEClass, QUERY_STATEMENT__PROJECTED_CHARACTERISTIC_LIST);
    createEReference(queryStatementEClass, QUERY_STATEMENT__SELECTED_ENTITY_EXPRESSION);

    projectedCharacteristicListEClass = createEClass(PROJECTED_CHARACTERISTIC_LIST);
    createEAttribute(projectedCharacteristicListEClass, PROJECTED_CHARACTERISTIC_LIST__ALL);
    createEReference(projectedCharacteristicListEClass, PROJECTED_CHARACTERISTIC_LIST__CHARACTERISTIC);

    projectedCharacteristicExpressionEClass = createEClass(PROJECTED_CHARACTERISTIC_EXPRESSION);

    selectedEntityCharacteristicWildcardReferenceEClass = createEClass(SELECTED_ENTITY_CHARACTERISTIC_WILDCARD_REFERENCE);
    createEReference(selectedEntityCharacteristicWildcardReferenceEClass, SELECTED_ENTITY_CHARACTERISTIC_WILDCARD_REFERENCE__SELECTED_ENTITY);

    explicitSelectedEntityCharacteristicReferenceEClass = createEClass(EXPLICIT_SELECTED_ENTITY_CHARACTERISTIC_REFERENCE);
    createEReference(explicitSelectedEntityCharacteristicReferenceEClass, EXPLICIT_SELECTED_ENTITY_CHARACTERISTIC_REFERENCE__SELECTED_ENTITY_CHARACTERISTIC_REFERENCE);
    createEReference(explicitSelectedEntityCharacteristicReferenceEClass, EXPLICIT_SELECTED_ENTITY_CHARACTERISTIC_REFERENCE__PROJECTED_CHARACTERISTIC_ALIAS);

    selectedEntityExpressionEClass = createEClass(SELECTED_ENTITY_EXPRESSION);
    createEReference(selectedEntityExpressionEClass, SELECTED_ENTITY_EXPRESSION__FROM);
    createEReference(selectedEntityExpressionEClass, SELECTED_ENTITY_EXPRESSION__WHERE);
    createEReference(selectedEntityExpressionEClass, SELECTED_ENTITY_EXPRESSION__ORDER_BY);

    fromClauseEClass = createEClass(FROM_CLAUSE);
    createEReference(fromClauseEClass, FROM_CLAUSE__ENTITY);

    entityExpressionEClass = createEClass(ENTITY_EXPRESSION);
    createEReference(entityExpressionEClass, ENTITY_EXPRESSION__SELECTED_ENTITY);
    createEReference(entityExpressionEClass, ENTITY_EXPRESSION__EJE);

    selectedEntityEClass = createEClass(SELECTED_ENTITY);
    createEReference(selectedEntityEClass, SELECTED_ENTITY__ENTITY_TYPE);
    createEReference(selectedEntityEClass, SELECTED_ENTITY__SELECTED_ENTITY_ALIAS);

    entityJoinExpressionEClass = createEClass(ENTITY_JOIN_EXPRESSION);
    createEReference(entityJoinExpressionEClass, ENTITY_JOIN_EXPRESSION__JOIN_ENTITY);
    createEReference(entityJoinExpressionEClass, ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA);

    joinEntityEClass = createEClass(JOIN_ENTITY);

    entityJoinCriteriaEClass = createEClass(ENTITY_JOIN_CRITERIA);
    createEReference(entityJoinCriteriaEClass, ENTITY_JOIN_CRITERIA__ETCEE);

    entityTypeCharacteristicEquivalenceExpressionEClass = createEClass(ENTITY_TYPE_CHARACTERISTIC_EQUIVALENCE_EXPRESSION);
    createEReference(entityTypeCharacteristicEquivalenceExpressionEClass, ENTITY_TYPE_CHARACTERISTIC_EQUIVALENCE_EXPRESSION__SECR);
    createEReference(entityTypeCharacteristicEquivalenceExpressionEClass, ENTITY_TYPE_CHARACTERISTIC_EQUIVALENCE_EXPRESSION__SELECTED_ENTITY);

    selectedEntityCharacteristicReferenceEClass = createEClass(SELECTED_ENTITY_CHARACTERISTIC_REFERENCE);
    createEReference(selectedEntityCharacteristicReferenceEClass, SELECTED_ENTITY_CHARACTERISTIC_REFERENCE__SELECTED_ENTITY);
    createEReference(selectedEntityCharacteristicReferenceEClass, SELECTED_ENTITY_CHARACTERISTIC_REFERENCE__CHARACTERISTIC);

    selectedEntityReferenceEClass = createEClass(SELECTED_ENTITY_REFERENCE);

    whereClauseEClass = createEClass(WHERE_CLAUSE);
    createEReference(whereClauseEClass, WHERE_CLAUSE__CRITERIA);

    criteriaEClass = createEClass(CRITERIA);

    orderByClauseEClass = createEClass(ORDER_BY_CLAUSE);
    createEReference(orderByClauseEClass, ORDER_BY_CLAUSE__ORDERING_EXPRESSION);

    orderingExpressionEClass = createEClass(ORDERING_EXPRESSION);
    createEReference(orderingExpressionEClass, ORDERING_EXPRESSION__CHARACTERISTIC);
    createEAttribute(orderingExpressionEClass, ORDERING_EXPRESSION__ORDERING_TYPE);

    projectedCharacteristicReferenceEClass = createEClass(PROJECTED_CHARACTERISTIC_REFERENCE);

    qualifiedProjectedCharacteristicReferenceEClass = createEClass(QUALIFIED_PROJECTED_CHARACTERISTIC_REFERENCE);
    createEReference(qualifiedProjectedCharacteristicReferenceEClass, QUALIFIED_PROJECTED_CHARACTERISTIC_REFERENCE__SELECTED_ENTITY_REFERENCE);
    createEReference(qualifiedProjectedCharacteristicReferenceEClass, QUALIFIED_PROJECTED_CHARACTERISTIC_REFERENCE__CHARACTERISTIC);

    unqualifiedProjectedCharacteristicReferenceOrAliasEClass = createEClass(UNQUALIFIED_PROJECTED_CHARACTERISTIC_REFERENCE_OR_ALIAS);

    booleanExpressionEClass = createEClass(BOOLEAN_EXPRESSION);
    createEReference(booleanExpressionEClass, BOOLEAN_EXPRESSION__TERM);

    booleanTermEClass = createEClass(BOOLEAN_TERM);
    createEReference(booleanTermEClass, BOOLEAN_TERM__FACTOR);

    booleanFactorEClass = createEClass(BOOLEAN_FACTOR);
    createEAttribute(booleanFactorEClass, BOOLEAN_FACTOR__NOT);
    createEReference(booleanFactorEClass, BOOLEAN_FACTOR__PRED);

    booleanPredicateEClass = createEClass(BOOLEAN_PREDICATE);

    scalarComparePredicateEClass = createEClass(SCALAR_COMPARE_PREDICATE);
    createEReference(scalarComparePredicateEClass, SCALAR_COMPARE_PREDICATE__LEFT);
    createEAttribute(scalarComparePredicateEClass, SCALAR_COMPARE_PREDICATE__OP);
    createEReference(scalarComparePredicateEClass, SCALAR_COMPARE_PREDICATE__RIGHT);

    setMembershipPredicateEClass = createEClass(SET_MEMBERSHIP_PREDICATE);
    createEReference(setMembershipPredicateEClass, SET_MEMBERSHIP_PREDICATE__LEFT);
    createEAttribute(setMembershipPredicateEClass, SET_MEMBERSHIP_PREDICATE__NOT);
    createEReference(setMembershipPredicateEClass, SET_MEMBERSHIP_PREDICATE__SET);

    logicalSetEClass = createEClass(LOGICAL_SET);

    characteristicBasisSetEClass = createEClass(CHARACTERISTIC_BASIS_SET);
    createEReference(characteristicBasisSetEClass, CHARACTERISTIC_BASIS_SET__CHARACTERISTIC_BASIS);

    setComparePredicateEClass = createEClass(SET_COMPARE_PREDICATE);
    createEReference(setComparePredicateEClass, SET_COMPARE_PREDICATE__PRED);
    createEAttribute(setComparePredicateEClass, SET_COMPARE_PREDICATE__OP);
    createEAttribute(setComparePredicateEClass, SET_COMPARE_PREDICATE__QUANTIFIER);
    createEReference(setComparePredicateEClass, SET_COMPARE_PREDICATE__SET);

    compareSetEClass = createEClass(COMPARE_SET);

    existsPredicateEClass = createEClass(EXISTS_PREDICATE);
    createEReference(existsPredicateEClass, EXISTS_PREDICATE__SUB);

    predicateTermEClass = createEClass(PREDICATE_TERM);

    characteristicBasisEClass = createEClass(CHARACTERISTIC_BASIS);

    subqueryEClass = createEClass(SUBQUERY);
    createEReference(subqueryEClass, SUBQUERY__QUERY);

    characteristicReferenceEClass = createEClass(CHARACTERISTIC_REFERENCE);

    entityTypeReferenceEClass = createEClass(ENTITY_TYPE_REFERENCE);

    enumLiteralSetEClass = createEClass(ENUM_LITERAL_SET);
    createEReference(enumLiteralSetEClass, ENUM_LITERAL_SET__TYPE);
    createEReference(enumLiteralSetEClass, ENUM_LITERAL_SET__LITERAL);

    enumLiteralReferenceExpressionEClass = createEClass(ENUM_LITERAL_REFERENCE_EXPRESSION);
    createEReference(enumLiteralReferenceExpressionEClass, ENUM_LITERAL_REFERENCE_EXPRESSION__TYP);
    createEReference(enumLiteralReferenceExpressionEClass, ENUM_LITERAL_REFERENCE_EXPRESSION__LITERAL);

    enumerationTypeReferenceEClass = createEClass(ENUMERATION_TYPE_REFERENCE);

    enumerationLiteralReferenceEClass = createEClass(ENUMERATION_LITERAL_REFERENCE);

    selectedEntityAliasEClass = createEClass(SELECTED_ENTITY_ALIAS);

    projectedCharacteristicAliasEClass = createEClass(PROJECTED_CHARACTERISTIC_ALIAS);

    queryIdentifierEClass = createEClass(QUERY_IDENTIFIER);
    createEAttribute(queryIdentifierEClass, QUERY_IDENTIFIER__ID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    queryStatementEClass.getESuperTypes().add(this.getQuerySpecification());
    selectedEntityCharacteristicWildcardReferenceEClass.getESuperTypes().add(this.getProjectedCharacteristicExpression());
    explicitSelectedEntityCharacteristicReferenceEClass.getESuperTypes().add(this.getProjectedCharacteristicExpression());
    selectedEntityEClass.getESuperTypes().add(this.getJoinEntity());
    selectedEntityCharacteristicReferenceEClass.getESuperTypes().add(this.getCharacteristicBasis());
    qualifiedProjectedCharacteristicReferenceEClass.getESuperTypes().add(this.getProjectedCharacteristicReference());
    unqualifiedProjectedCharacteristicReferenceOrAliasEClass.getESuperTypes().add(this.getProjectedCharacteristicReference());
    booleanExpressionEClass.getESuperTypes().add(this.getCriteria());
    booleanExpressionEClass.getESuperTypes().add(this.getBooleanPredicate());
    scalarComparePredicateEClass.getESuperTypes().add(this.getBooleanPredicate());
    characteristicBasisSetEClass.getESuperTypes().add(this.getLogicalSet());
    existsPredicateEClass.getESuperTypes().add(this.getBooleanPredicate());
    characteristicBasisEClass.getESuperTypes().add(this.getPredicateTerm());
    subqueryEClass.getESuperTypes().add(this.getLogicalSet());
    subqueryEClass.getESuperTypes().add(this.getCompareSet());
    subqueryEClass.getESuperTypes().add(this.getCharacteristicBasis());
    enumLiteralSetEClass.getESuperTypes().add(this.getLogicalSet());
    enumLiteralReferenceExpressionEClass.getESuperTypes().add(this.getPredicateTerm());
    queryIdentifierEClass.getESuperTypes().add(this.getSelectedEntityReference());
    queryIdentifierEClass.getESuperTypes().add(this.getUnqualifiedProjectedCharacteristicReferenceOrAlias());
    queryIdentifierEClass.getESuperTypes().add(this.getCharacteristicReference());
    queryIdentifierEClass.getESuperTypes().add(this.getEntityTypeReference());
    queryIdentifierEClass.getESuperTypes().add(this.getEnumerationTypeReference());
    queryIdentifierEClass.getESuperTypes().add(this.getEnumerationLiteralReference());
    queryIdentifierEClass.getESuperTypes().add(this.getSelectedEntityAlias());
    queryIdentifierEClass.getESuperTypes().add(this.getProjectedCharacteristicAlias());

    // Initialize classes and features; add operations and parameters
    initEClass(querySpecificationEClass, QuerySpecification.class, "QuerySpecification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(queryStatementEClass, QueryStatement.class, "QueryStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getQueryStatement_Qualifier(), ecorePackage.getEString(), "qualifier", null, 0, 1, QueryStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getQueryStatement_ProjectedCharacteristicList(), this.getProjectedCharacteristicList(), null, "projectedCharacteristicList", null, 0, 1, QueryStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getQueryStatement_SelectedEntityExpression(), this.getSelectedEntityExpression(), null, "selectedEntityExpression", null, 0, 1, QueryStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(projectedCharacteristicListEClass, ProjectedCharacteristicList.class, "ProjectedCharacteristicList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getProjectedCharacteristicList_All(), ecorePackage.getEString(), "all", null, 0, 1, ProjectedCharacteristicList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProjectedCharacteristicList_Characteristic(), this.getProjectedCharacteristicExpression(), null, "characteristic", null, 0, -1, ProjectedCharacteristicList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(projectedCharacteristicExpressionEClass, ProjectedCharacteristicExpression.class, "ProjectedCharacteristicExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(selectedEntityCharacteristicWildcardReferenceEClass, SelectedEntityCharacteristicWildcardReference.class, "SelectedEntityCharacteristicWildcardReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelectedEntityCharacteristicWildcardReference_SelectedEntity(), this.getSelectedEntityReference(), null, "selectedEntity", null, 0, 1, SelectedEntityCharacteristicWildcardReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(explicitSelectedEntityCharacteristicReferenceEClass, ExplicitSelectedEntityCharacteristicReference.class, "ExplicitSelectedEntityCharacteristicReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExplicitSelectedEntityCharacteristicReference_SelectedEntityCharacteristicReference(), this.getSelectedEntityCharacteristicReference(), null, "selectedEntityCharacteristicReference", null, 0, 1, ExplicitSelectedEntityCharacteristicReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExplicitSelectedEntityCharacteristicReference_ProjectedCharacteristicAlias(), this.getProjectedCharacteristicAlias(), null, "projectedCharacteristicAlias", null, 0, 1, ExplicitSelectedEntityCharacteristicReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectedEntityExpressionEClass, SelectedEntityExpression.class, "SelectedEntityExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelectedEntityExpression_From(), this.getFromClause(), null, "from", null, 0, 1, SelectedEntityExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectedEntityExpression_Where(), this.getWhereClause(), null, "where", null, 0, 1, SelectedEntityExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectedEntityExpression_OrderBy(), this.getOrderByClause(), null, "orderBy", null, 0, 1, SelectedEntityExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fromClauseEClass, FromClause.class, "FromClause", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFromClause_Entity(), this.getEntityExpression(), null, "entity", null, 0, 1, FromClause.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityExpressionEClass, EntityExpression.class, "EntityExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEntityExpression_SelectedEntity(), this.getSelectedEntity(), null, "selectedEntity", null, 0, 1, EntityExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityExpression_Eje(), this.getEntityJoinExpression(), null, "eje", null, 0, -1, EntityExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectedEntityEClass, SelectedEntity.class, "SelectedEntity", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelectedEntity_EntityType(), this.getEntityTypeReference(), null, "entityType", null, 0, 1, SelectedEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectedEntity_SelectedEntityAlias(), this.getSelectedEntityAlias(), null, "selectedEntityAlias", null, 0, 1, SelectedEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityJoinExpressionEClass, EntityJoinExpression.class, "EntityJoinExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEntityJoinExpression_JoinEntity(), this.getJoinEntity(), null, "joinEntity", null, 0, 1, EntityJoinExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityJoinExpression_EntityJoinCriteria(), this.getEntityJoinCriteria(), null, "entityJoinCriteria", null, 0, 1, EntityJoinExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(joinEntityEClass, JoinEntity.class, "JoinEntity", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(entityJoinCriteriaEClass, EntityJoinCriteria.class, "EntityJoinCriteria", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEntityJoinCriteria_Etcee(), this.getEntityTypeCharacteristicEquivalenceExpression(), null, "etcee", null, 0, -1, EntityJoinCriteria.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityTypeCharacteristicEquivalenceExpressionEClass, EntityTypeCharacteristicEquivalenceExpression.class, "EntityTypeCharacteristicEquivalenceExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEntityTypeCharacteristicEquivalenceExpression_Secr(), this.getSelectedEntityCharacteristicReference(), null, "secr", null, 0, 1, EntityTypeCharacteristicEquivalenceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityTypeCharacteristicEquivalenceExpression_SelectedEntity(), this.getSelectedEntityReference(), null, "selectedEntity", null, 0, 1, EntityTypeCharacteristicEquivalenceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectedEntityCharacteristicReferenceEClass, SelectedEntityCharacteristicReference.class, "SelectedEntityCharacteristicReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelectedEntityCharacteristicReference_SelectedEntity(), this.getSelectedEntityReference(), null, "selectedEntity", null, 0, 1, SelectedEntityCharacteristicReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectedEntityCharacteristicReference_Characteristic(), this.getCharacteristicReference(), null, "characteristic", null, 0, 1, SelectedEntityCharacteristicReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectedEntityReferenceEClass, SelectedEntityReference.class, "SelectedEntityReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(whereClauseEClass, WhereClause.class, "WhereClause", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getWhereClause_Criteria(), this.getCriteria(), null, "criteria", null, 0, 1, WhereClause.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(criteriaEClass, Criteria.class, "Criteria", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(orderByClauseEClass, OrderByClause.class, "OrderByClause", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOrderByClause_OrderingExpression(), this.getOrderingExpression(), null, "orderingExpression", null, 0, -1, OrderByClause.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(orderingExpressionEClass, OrderingExpression.class, "OrderingExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOrderingExpression_Characteristic(), this.getProjectedCharacteristicReference(), null, "characteristic", null, 0, 1, OrderingExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getOrderingExpression_OrderingType(), ecorePackage.getEString(), "orderingType", null, 0, 1, OrderingExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(projectedCharacteristicReferenceEClass, ProjectedCharacteristicReference.class, "ProjectedCharacteristicReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(qualifiedProjectedCharacteristicReferenceEClass, QualifiedProjectedCharacteristicReference.class, "QualifiedProjectedCharacteristicReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getQualifiedProjectedCharacteristicReference_SelectedEntityReference(), this.getSelectedEntityReference(), null, "selectedEntityReference", null, 0, 1, QualifiedProjectedCharacteristicReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getQualifiedProjectedCharacteristicReference_Characteristic(), this.getCharacteristicReference(), null, "characteristic", null, 0, 1, QualifiedProjectedCharacteristicReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unqualifiedProjectedCharacteristicReferenceOrAliasEClass, UnqualifiedProjectedCharacteristicReferenceOrAlias.class, "UnqualifiedProjectedCharacteristicReferenceOrAlias", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(booleanExpressionEClass, BooleanExpression.class, "BooleanExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBooleanExpression_Term(), this.getBooleanTerm(), null, "term", null, 0, -1, BooleanExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanTermEClass, BooleanTerm.class, "BooleanTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBooleanTerm_Factor(), this.getBooleanFactor(), null, "factor", null, 0, -1, BooleanTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanFactorEClass, BooleanFactor.class, "BooleanFactor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBooleanFactor_Not(), ecorePackage.getEBoolean(), "not", null, 0, 1, BooleanFactor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBooleanFactor_Pred(), this.getBooleanPredicate(), null, "pred", null, 0, 1, BooleanFactor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanPredicateEClass, BooleanPredicate.class, "BooleanPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(scalarComparePredicateEClass, ScalarComparePredicate.class, "ScalarComparePredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getScalarComparePredicate_Left(), this.getPredicateTerm(), null, "left", null, 0, 1, ScalarComparePredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getScalarComparePredicate_Op(), ecorePackage.getEString(), "op", null, 0, 1, ScalarComparePredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getScalarComparePredicate_Right(), this.getPredicateTerm(), null, "right", null, 0, 1, ScalarComparePredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setMembershipPredicateEClass, SetMembershipPredicate.class, "SetMembershipPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSetMembershipPredicate_Left(), this.getPredicateTerm(), null, "left", null, 0, 1, SetMembershipPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSetMembershipPredicate_Not(), ecorePackage.getEBoolean(), "not", null, 0, 1, SetMembershipPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSetMembershipPredicate_Set(), this.getLogicalSet(), null, "set", null, 0, 1, SetMembershipPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicalSetEClass, LogicalSet.class, "LogicalSet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(characteristicBasisSetEClass, CharacteristicBasisSet.class, "CharacteristicBasisSet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCharacteristicBasisSet_CharacteristicBasis(), this.getCharacteristicBasis(), null, "characteristicBasis", null, 0, -1, CharacteristicBasisSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setComparePredicateEClass, SetComparePredicate.class, "SetComparePredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSetComparePredicate_Pred(), this.getPredicateTerm(), null, "pred", null, 0, 1, SetComparePredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSetComparePredicate_Op(), ecorePackage.getEString(), "op", null, 0, 1, SetComparePredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSetComparePredicate_Quantifier(), ecorePackage.getEString(), "quantifier", null, 0, 1, SetComparePredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSetComparePredicate_Set(), this.getCompareSet(), null, "set", null, 0, 1, SetComparePredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(compareSetEClass, CompareSet.class, "CompareSet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(existsPredicateEClass, ExistsPredicate.class, "ExistsPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExistsPredicate_Sub(), this.getSubquery(), null, "sub", null, 0, 1, ExistsPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(predicateTermEClass, PredicateTerm.class, "PredicateTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(characteristicBasisEClass, CharacteristicBasis.class, "CharacteristicBasis", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(subqueryEClass, Subquery.class, "Subquery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSubquery_Query(), this.getQueryStatement(), null, "query", null, 0, 1, Subquery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(characteristicReferenceEClass, CharacteristicReference.class, "CharacteristicReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(entityTypeReferenceEClass, EntityTypeReference.class, "EntityTypeReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(enumLiteralSetEClass, EnumLiteralSet.class, "EnumLiteralSet", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEnumLiteralSet_Type(), this.getEnumerationTypeReference(), null, "type", null, 0, 1, EnumLiteralSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnumLiteralSet_Literal(), this.getEnumerationLiteralReference(), null, "literal", null, 0, -1, EnumLiteralSet.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumLiteralReferenceExpressionEClass, EnumLiteralReferenceExpression.class, "EnumLiteralReferenceExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEnumLiteralReferenceExpression_Typ(), this.getEnumerationTypeReference(), null, "typ", null, 0, 1, EnumLiteralReferenceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnumLiteralReferenceExpression_Literal(), this.getEnumerationLiteralReference(), null, "literal", null, 0, 1, EnumLiteralReferenceExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumerationTypeReferenceEClass, EnumerationTypeReference.class, "EnumerationTypeReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(enumerationLiteralReferenceEClass, EnumerationLiteralReference.class, "EnumerationLiteralReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(selectedEntityAliasEClass, SelectedEntityAlias.class, "SelectedEntityAlias", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(projectedCharacteristicAliasEClass, ProjectedCharacteristicAlias.class, "ProjectedCharacteristicAlias", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(queryIdentifierEClass, QueryIdentifier.class, "QueryIdentifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getQueryIdentifier_Id(), ecorePackage.getEString(), "id", null, 0, 1, QueryIdentifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //QueryPackageImpl

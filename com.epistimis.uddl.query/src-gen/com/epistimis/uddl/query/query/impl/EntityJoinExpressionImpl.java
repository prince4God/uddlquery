/**
 * generated by Xtext 2.32.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.uddl.query.query.impl;

import com.epistimis.uddl.query.query.EntityJoinCriteria;
import com.epistimis.uddl.query.query.EntityJoinExpression;
import com.epistimis.uddl.query.query.JoinEntity;
import com.epistimis.uddl.query.query.QueryPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entity Join Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.epistimis.uddl.query.query.impl.EntityJoinExpressionImpl#getJoinEntity <em>Join Entity</em>}</li>
 *   <li>{@link com.epistimis.uddl.query.query.impl.EntityJoinExpressionImpl#getEntityJoinCriteria <em>Entity Join Criteria</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntityJoinExpressionImpl extends MinimalEObjectImpl.Container implements EntityJoinExpression
{
  /**
   * The cached value of the '{@link #getJoinEntity() <em>Join Entity</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoinEntity()
   * @generated
   * @ordered
   */
  protected JoinEntity joinEntity;

  /**
   * The cached value of the '{@link #getEntityJoinCriteria() <em>Entity Join Criteria</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntityJoinCriteria()
   * @generated
   * @ordered
   */
  protected EntityJoinCriteria entityJoinCriteria;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntityJoinExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QueryPackage.Literals.ENTITY_JOIN_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JoinEntity getJoinEntity()
  {
    return joinEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetJoinEntity(JoinEntity newJoinEntity, NotificationChain msgs)
  {
    JoinEntity oldJoinEntity = joinEntity;
    joinEntity = newJoinEntity;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QueryPackage.ENTITY_JOIN_EXPRESSION__JOIN_ENTITY, oldJoinEntity, newJoinEntity);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setJoinEntity(JoinEntity newJoinEntity)
  {
    if (newJoinEntity != joinEntity)
    {
      NotificationChain msgs = null;
      if (joinEntity != null)
        msgs = ((InternalEObject)joinEntity).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QueryPackage.ENTITY_JOIN_EXPRESSION__JOIN_ENTITY, null, msgs);
      if (newJoinEntity != null)
        msgs = ((InternalEObject)newJoinEntity).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QueryPackage.ENTITY_JOIN_EXPRESSION__JOIN_ENTITY, null, msgs);
      msgs = basicSetJoinEntity(newJoinEntity, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QueryPackage.ENTITY_JOIN_EXPRESSION__JOIN_ENTITY, newJoinEntity, newJoinEntity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityJoinCriteria getEntityJoinCriteria()
  {
    return entityJoinCriteria;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEntityJoinCriteria(EntityJoinCriteria newEntityJoinCriteria, NotificationChain msgs)
  {
    EntityJoinCriteria oldEntityJoinCriteria = entityJoinCriteria;
    entityJoinCriteria = newEntityJoinCriteria;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QueryPackage.ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA, oldEntityJoinCriteria, newEntityJoinCriteria);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEntityJoinCriteria(EntityJoinCriteria newEntityJoinCriteria)
  {
    if (newEntityJoinCriteria != entityJoinCriteria)
    {
      NotificationChain msgs = null;
      if (entityJoinCriteria != null)
        msgs = ((InternalEObject)entityJoinCriteria).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QueryPackage.ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA, null, msgs);
      if (newEntityJoinCriteria != null)
        msgs = ((InternalEObject)newEntityJoinCriteria).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QueryPackage.ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA, null, msgs);
      msgs = basicSetEntityJoinCriteria(newEntityJoinCriteria, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QueryPackage.ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA, newEntityJoinCriteria, newEntityJoinCriteria));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QueryPackage.ENTITY_JOIN_EXPRESSION__JOIN_ENTITY:
        return basicSetJoinEntity(null, msgs);
      case QueryPackage.ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA:
        return basicSetEntityJoinCriteria(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QueryPackage.ENTITY_JOIN_EXPRESSION__JOIN_ENTITY:
        return getJoinEntity();
      case QueryPackage.ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA:
        return getEntityJoinCriteria();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QueryPackage.ENTITY_JOIN_EXPRESSION__JOIN_ENTITY:
        setJoinEntity((JoinEntity)newValue);
        return;
      case QueryPackage.ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA:
        setEntityJoinCriteria((EntityJoinCriteria)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QueryPackage.ENTITY_JOIN_EXPRESSION__JOIN_ENTITY:
        setJoinEntity((JoinEntity)null);
        return;
      case QueryPackage.ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA:
        setEntityJoinCriteria((EntityJoinCriteria)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QueryPackage.ENTITY_JOIN_EXPRESSION__JOIN_ENTITY:
        return joinEntity != null;
      case QueryPackage.ENTITY_JOIN_EXPRESSION__ENTITY_JOIN_CRITERIA:
        return entityJoinCriteria != null;
    }
    return super.eIsSet(featureID);
  }

} //EntityJoinExpressionImpl
